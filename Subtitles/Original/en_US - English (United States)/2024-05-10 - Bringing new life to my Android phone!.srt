1
00:00:00,200 --> 00:00:02,960
This video is sponsored to you by SD Maid SE.

2
00:00:02,960 --> 00:00:05,000
More on that at the end of the video.

3
00:00:08,200 --> 00:00:09,760
Android phones.

4
00:00:09,760 --> 00:00:12,040
In case you didn't know about Android phones,

5
00:00:12,040 --> 00:00:15,000
they are quite a versatile operating system.

6
00:00:15,000 --> 00:00:16,560
Now before we get into anything,

7
00:00:16,560 --> 00:00:20,200
I gotta make it clear that I don't 
take sides between iOS and Android.

8
00:00:20,200 --> 00:00:24,560
Because in my opinion, both of 
them have its own pros and cons.

9
00:00:24,560 --> 00:00:29,680
And even though I use an iPhone 12 Pro Max 
as my tracking camera and my daily driver,

10
00:00:29,680 --> 00:00:32,280
I still think there's a 
lot in Android to discover.

11
00:00:32,280 --> 00:00:33,360
Now, with that said.

12
00:00:33,360 --> 00:00:35,000
There's one thing that I have to address

13
00:00:35,000 --> 00:00:40,920
that has been left alone for a very very 
long time on my Android secondary driver,

14
00:00:40,920 --> 00:00:43,040
the Galaxy Note 10+.

15
00:00:43,040 --> 00:00:44,640
Yeah, there may be some flaws.

16
00:00:44,640 --> 00:00:47,920
Some of the flaws happen to be 
a bit of hiccuping going on.

17
00:00:47,920 --> 00:00:50,680
Don't get me wrong, Chino 
is really really adorable.

18
00:00:50,680 --> 00:00:54,680
And on top of that, Samsung 
has decided to discontinue

19
00:00:54,680 --> 00:00:58,240
security updates for the Galaxy Note 10+,

20
00:00:58,240 --> 00:01:01,840
which also means this phone 
is no longer secure and it  

21
00:01:01,840 --> 00:01:04,160
could be subject to security vulnerabilities

22
00:01:04,160 --> 00:01:06,520
after being left alone for a long time.

23
00:01:06,520 --> 00:01:09,760
Usually a general user would 
just buy a brand new phone,

24
00:01:09,760 --> 00:01:13,040
but I don't get that kind of 
luxury and I don't got that money,

25
00:01:13,040 --> 00:01:14,200
at least for now.

26
00:01:14,200 --> 00:01:18,040
So, let's install a custom Android OS.

27
00:01:18,040 --> 00:01:21,120
Now you may be wondering to yourself: 
"Oh Mel, how do you do this?"

28
00:01:21,120 --> 00:01:24,360
"I've never heard, I've 
never tried this before. Oh~"

29
00:01:24,360 --> 00:01:25,720
Now don't worry.

30
00:01:25,720 --> 00:01:27,960
It may be quite simple once 
you get the hang of it,

31
00:01:27,960 --> 00:01:32,520
but it can get a little complicated since 
things are different from device to device,

32
00:01:32,520 --> 00:01:34,680
which in this case the Galaxy Note 10+,

33
00:01:34,680 --> 00:01:40,880
happens to be in the middle of what's being 
crazy much of a hassle and what's not a hassle.

34
00:01:40,880 --> 00:01:42,981
So as your tech wizardess girl,

35
00:01:43,680 --> 00:01:45,880
I've done my prior research about this.

36
00:01:45,880 --> 00:01:49,720
Now, the Galaxy Note 10+, is particularly 
one of those phones that are,

37
00:01:49,720 --> 00:01:55,520
at least according to the community, 
possibly a difficult one to handle,

38
00:01:55,520 --> 00:01:58,360
considering how they're using 
a completely different chip,

39
00:01:58,360 --> 00:02:02,040
at least for the international variants, 
that is not the Snapdragon chip,

40
00:02:02,040 --> 00:02:04,880
but rather Samsung's in-house Exynos chip,

41
00:02:04,880 --> 00:02:09,840
which means things can be a little bit 
different from the usual Qualcomm Snapdragon.

42
00:02:09,840 --> 00:02:13,800
However, I've done some digging 
around and I found two custom OSes

43
00:02:13,800 --> 00:02:18,120
that are currently actively being 
maintained by the community right now.

44
00:02:18,120 --> 00:02:21,480
However, there are more other different 
flavors of custom Android ROMs,

45
00:02:21,480 --> 00:02:24,040
but it's very subjective to the maintainers

46
00:02:24,040 --> 00:02:29,440
to see whether they would take the initiative 
to keep a ROM for a specific model up to date,

47
00:02:29,440 --> 00:02:31,680
which in the case of the Galaxy Note 10+,

48
00:02:31,680 --> 00:02:33,440
it's kind of sad to hear that there's  

49
00:02:33,440 --> 00:02:36,640
only two that's currently being 
actively maintained right now,

50
00:02:36,640 --> 00:02:38,160
or three for that matter.

51
00:02:38,160 --> 00:02:41,040
So let's get through, let's 
get through each of them.

52
00:02:41,040 --> 00:02:44,480
We're going to the first step right 
now, which is selecting the ROM.

53
00:02:44,480 --> 00:02:47,760
Now the first ROM that I'm gonna go 
through right now is called PixelOS,

54
00:02:47,760 --> 00:02:50,640
which is trying to become a Google Pixel,

55
00:02:50,640 --> 00:02:54,160
for non-Google Pixel pretty much, 
which is kind of interesting actually.

56
00:02:54,160 --> 00:02:55,200
Before we get into that,

57
00:02:55,200 --> 00:02:58,040
we're gonna understand what is AOSP.

58
00:02:58,040 --> 00:03:01,800
So AOSP basically means 
Android Open Source Project,

59
00:03:01,800 --> 00:03:04,400
which is a project made by 
Google that allows people

60
00:03:04,400 --> 00:03:08,320
to create completely custom 
versions of Android of their own.

61
00:03:08,320 --> 00:03:10,400
Think of it like Android for tinkers,

62
00:03:10,400 --> 00:03:14,240
that is separated from the 
proper manufacturer-made ones.

63
00:03:14,240 --> 00:03:15,800
Even though they may be separate,

64
00:03:15,800 --> 00:03:19,040
doesn't necessarily mean 
the quality can be subpar.

65
00:03:19,040 --> 00:03:21,640
If the team is right, and they're all dedicated,

66
00:03:21,640 --> 00:03:23,880
I'm sure there are great 
features coming along with that.

67
00:03:23,880 --> 00:03:29,880
There's also a huge slew of ROMs out there that 
you can find that are tailored to specific cases.

68
00:03:29,880 --> 00:03:32,680
It's the same as when you're looking 
for different distros of Linux.

69
00:03:32,680 --> 00:03:36,400
Where each distro of Linux is 
dedicated for specific cases,

70
00:03:36,400 --> 00:03:38,840
and you can pick to whichever is your liking,

71
00:03:38,840 --> 00:03:42,080
and you can customize it if 
you have the know-how to.

72
00:03:42,080 --> 00:03:47,080
However, Pixel OS makes this a little 
bit simpler for small tinkerers like me

73
00:03:47,080 --> 00:03:49,800
that are looking to just change things a little,

74
00:03:49,800 --> 00:03:52,600
but not do things insanely dramatically.

75
00:03:52,600 --> 00:03:56,120
I just want a really neat, well-maintained OS,

76
00:03:56,120 --> 00:03:59,800
and stick with it, with the added 
benefit of my current situation.

77
00:03:59,800 --> 00:04:04,600
Which in this case, Samsung's 
One UI is ridiculously bloated.

78
00:04:04,600 --> 00:04:07,480
If you didn't know, there's a 
couple of webpages that talked  

79
00:04:07,480 --> 00:04:12,240
about how many bloatwares Samsung 
has in their operating systems,

80
00:04:12,240 --> 00:04:15,080
which is batshit insane in my opinion.

81
00:04:15,080 --> 00:04:18,640
So if you want to clean 
Android OS without the bloat,

82
00:04:18,640 --> 00:04:22,480
usually Android Open Source 
Projects are amazing for that.

83
00:04:22,480 --> 00:04:24,920
Now there might be some 
more questions in your mind.

84
00:04:24,920 --> 00:04:26,960
Isn't that the same as rooting?

85
00:04:26,960 --> 00:04:29,000
No, they are not.

86
00:04:29,000 --> 00:04:34,280
Rooting is a completely different 
process for a different purpose.

87
00:04:34,280 --> 00:04:38,000
Rooting is like, for you 
iPhone users, jailbreaking.

88
00:04:38,000 --> 00:04:41,680
Which is to break open the 
limits of what the OS can do,

89
00:04:41,680 --> 00:04:44,800
most of the time involving using exploits,

90
00:04:44,800 --> 00:04:49,680
to achieve customizability that are 
beyond what the stock software can do.

91
00:04:49,680 --> 00:04:52,840
But rooting can be done even on your current OS.

92
00:04:52,840 --> 00:04:55,240
You don't need to be on a specific OS to root.

93
00:04:55,240 --> 00:04:59,200
Thus why the topic I'm covering 
right now is completely unrelated.

94
00:04:59,200 --> 00:05:00,920
Right, getting back to Pixel OS,

95
00:05:00,920 --> 00:05:06,120
it basically tells Android OS into thinking 
that everything that it's got is a Pixel,

96
00:05:06,120 --> 00:05:08,160
even though you're actually not on a Pixel.

97
00:05:08,160 --> 00:05:10,480
Which is kind of an interesting 
project in my opinion.

98
00:05:10,480 --> 00:05:16,640
This is admittedly one of the closest to 
a pure Google system that you can find.

99
00:05:16,640 --> 00:05:20,440
However, this comes with a whole 
lot of Google's own bloatware.

100
00:05:20,440 --> 00:05:22,440
Like say you don't want Google Meet.

101
00:05:22,440 --> 00:05:24,960
With Pixel OS, I doubt that's possible.

102
00:05:24,960 --> 00:05:26,960
Which then this thing comes in.

103
00:05:26,960 --> 00:05:30,920
It's called crDroid, which is 
a fork of an already existent,  

104
00:05:30,920 --> 00:05:34,640
very well popular Android open 
source project called LineageOS.

105
00:05:34,640 --> 00:05:38,800
So on top of what's available on 
this really really clean LineageOS,

106
00:05:38,800 --> 00:05:43,040
they added a few customizability 
that might tailor to your taste.

107
00:05:43,040 --> 00:05:46,360
All that with very minimal Google bloat.

108
00:05:46,360 --> 00:05:49,120
And considering how it is based on LineageOS,

109
00:05:49,120 --> 00:05:52,280
whenever LineageOS releases 
a weekly security update,

110
00:05:52,280 --> 00:05:57,160
they can push it downstream and push these 
security updates to crDroid users as well.

111
00:05:57,160 --> 00:05:59,200
And there's also a whole slew of customizability

112
00:05:59,200 --> 00:06:02,600
that you won't otherwise see 
on most other OSes honestly.

113
00:06:02,600 --> 00:06:09,640
In my opinion, crDroid is amazing when you want 
great customizability with very little footprint.

114
00:06:09,640 --> 00:06:13,480
Right, now that I've introduced you 
to two different custom Android ROMs,

115
00:06:13,480 --> 00:06:16,240
let's get into how we get into installing it.

116
00:06:16,240 --> 00:06:20,680
Now like I said, each phone 
may vary by step significantly.

117
00:06:20,680 --> 00:06:25,200
Which in this case, having a Samsung phone 
means you'll be patching your firmware

118
00:06:25,200 --> 00:06:29,720
completely differently from what a 
traditional Android phone would usually use,

119
00:06:29,720 --> 00:06:33,560
which is using a command line 
called Android Debug Bridge.

120
00:06:33,560 --> 00:06:36,480
However, for Samsung phones, they 
decided to take a different approach

121
00:06:36,480 --> 00:06:39,920
and use a firmware updater called Odin.

122
00:06:39,920 --> 00:06:42,440
Now, if you don't know what 
Odin is, I don't blame you.

123
00:06:42,440 --> 00:06:45,120
It is actually a leaked 
software from Samsung's labs

124
00:06:45,120 --> 00:06:49,240
that is used to perform updates 
directly into the phone by cable.

125
00:06:49,240 --> 00:06:51,480
These are actually meant for developers things,

126
00:06:51,480 --> 00:06:52,800
but with the program leaked,  

127
00:06:52,800 --> 00:06:56,840
it basically unlocked a whole slew of 
customizability for the Samsung phones.

128
00:06:56,840 --> 00:06:59,600
And you can find Odin in this XDAForums.

129
00:06:59,600 --> 00:07:02,720
Please click on the ones in my description,

130
00:07:02,720 --> 00:07:06,920
do not Google Search it because 
you might find fakes at some point.

131
00:07:06,920 --> 00:07:11,120
This thread is the real one, be sure 
to bookmark it once you go there.

132
00:07:11,120 --> 00:07:16,160
Now the leaker has a couple of patches for 
Odin as well that bypasses a couple of things,

133
00:07:16,160 --> 00:07:19,080
but to me in my case, I 
don't really put use to it.

134
00:07:19,080 --> 00:07:21,640
So I'll probably be using the original version.

135
00:07:21,640 --> 00:07:26,800
And once you got Odin, the next thing you need 
to have is this Samsung Android USB driver.

136
00:07:26,800 --> 00:07:30,560
Because if you don't have it, you might not 
be able to see your devices on your computer.

137
00:07:30,560 --> 00:07:35,600
Right now that we're here, let's get 
to PixelOS's Galaxy Note 10+ page.

138
00:07:35,600 --> 00:07:40,880
And we're gonna download the latest build 
of their ROMs and a copy of the recovery.

139
00:07:40,880 --> 00:07:45,720
For PixelOS, you're going to need to get the 
recovery from this very thread right here,

140
00:07:45,720 --> 00:07:48,720
right down here for your respective devices.

141
00:07:48,720 --> 00:07:52,560
If you're using crDroid, you can also do so here.

142
00:07:52,560 --> 00:07:55,560
However, if you want the latest 
weekly updates from LineageOS,

143
00:07:55,560 --> 00:07:59,800
click on download older versions, to which 
it'll take you to the page on SourceForge.

144
00:07:59,800 --> 00:08:05,040
And as you can see on the file names, they are 
sorted by versions and by their build dates.

145
00:08:05,040 --> 00:08:09,880
The latest ones are usually security 
updates that came downstream from LineageOS.

146
00:08:09,880 --> 00:08:14,000
If you want the absolute latest security 
updates from LineageOS, you get them here.

147
00:08:14,000 --> 00:08:18,400
Otherwise, you can just get their recommended 
build, which is a little bit older,

148
00:08:18,400 --> 00:08:22,000
that has the December 2023 
update, as of the time of filming.

149
00:08:22,000 --> 00:08:25,160
And don't forget to grab 
the recovery for it as well.

150
00:08:25,160 --> 00:08:31,200
So for each ROMs, the two things you 
need is the ROM itself and the recovery.

151
00:08:31,200 --> 00:08:35,400
However, for crDroid and LineageOS, 
you're going to need one more thing.

152
00:08:35,400 --> 00:08:40,640
You see, some Android projects did not 
want to deal with legal issues with Google.

153
00:08:40,640 --> 00:08:44,360
So in turn, they do not include 
Google Play Services in their ROMs.

154
00:08:44,360 --> 00:08:48,240
So if you wish to have Google Play Services, 
you would have to download one extra thing,

155
00:08:48,240 --> 00:08:52,240
which is GApps, which is usually 
provided by the ROM provider

156
00:08:52,240 --> 00:08:55,040
as a separate link to where 
you have to download from.

157
00:08:55,040 --> 00:08:58,960
So some of the older Android 
versions would have OpenGApps,

158
00:08:58,960 --> 00:09:03,920
and then the more recent ones would 
have MindTheGaps or MindTheGApps.

159
00:09:03,920 --> 00:09:06,600
Heh, see what they did there?

160
00:09:06,600 --> 00:09:11,000
So you gotta keep an eye on the version 
number, architecture, and the build date.

161
00:09:11,000 --> 00:09:15,920
So say for example, I'm going to 
install Android 13 from crDroid.

162
00:09:15,920 --> 00:09:18,840
Then you have to match it 
right here on its name, 13.

163
00:09:18,840 --> 00:09:21,640
Following that is the architecture 
of your mobile device.

164
00:09:21,640 --> 00:09:25,640
Now if you don't know about the architecture 
of your mobile device, it's fine.

165
00:09:25,640 --> 00:09:28,280
LineageOS wiki has infos about it.

166
00:09:28,280 --> 00:09:32,480
And if you just scroll down even a tiny 
bit from say the Galaxy Note 10+ site,

167
00:09:32,480 --> 00:09:35,600
you would see a section called 
architecture and there's your answer.

168
00:09:35,600 --> 00:09:39,880
So now we know that the Galaxy Note 
10+ uses ARM64 for its architecture,

169
00:09:39,880 --> 00:09:45,960
which means now we put them all together, 
Android 13, ARM64, and there's no other builds,

170
00:09:45,960 --> 00:09:47,240
so this is the latest then.

171
00:09:47,240 --> 00:09:48,320
Then we click download.

172
00:09:48,320 --> 00:09:50,880
Once we've obtained all the files that we need,

173
00:09:50,880 --> 00:09:53,120
then you'll end up with these sets of stuff.

174
00:09:53,120 --> 00:09:57,000
However, if you only have one OS 
each, you would only need these two.

175
00:09:57,000 --> 00:09:59,080
This, and that's it, three stuff, or four.

176
00:09:59,080 --> 00:10:00,680
However, if you have one OS only,

177
00:10:00,680 --> 00:10:05,400
you would only want the said OS and Odin, 
or which LineageOS's case or crDroid,

178
00:10:05,400 --> 00:10:07,600
you're gonna also need MindTheGApps as well.

179
00:10:07,600 --> 00:10:09,520
Alright, shall we get into flashing?

180
00:10:09,520 --> 00:10:10,720
Not that kind of flashing.

181
00:10:10,720 --> 00:10:12,480
Whatever you're thinking, no.

182
00:10:12,480 --> 00:10:15,600
Okay, first and foremost, we 
gotta do a really important thing.

183
00:10:15,600 --> 00:10:20,600
We gotta head to the settings, scroll all 
the way down, and click [About Phone].

184
00:10:20,600 --> 00:10:25,480
Go to [Software Information], and 
click the [Build Number] seven times.

185
00:10:25,480 --> 00:10:29,960
One, two, you'll count down down 
here as you can see, as you click.

186
00:10:29,960 --> 00:10:34,280
If you happen to have PIN set on your 
device, you would also need that as well.

187
00:10:34,280 --> 00:10:38,600
Right, now with Developer Mode turned on, 
let's go back to the front of the settings,

188
00:10:38,600 --> 00:10:41,920
and you see there's one more 
entry called [Developer Options].

189
00:10:41,920 --> 00:10:44,280
We click into that, and we 
scroll down a teeny tiny bit,

190
00:10:44,280 --> 00:10:47,600
and you see right here, right where 
my tip is at, [OEM unlocking].

191
00:10:47,600 --> 00:10:51,720
We're gonna need to unlock that because 
we're making modifications to our systems.

192
00:10:51,720 --> 00:10:55,480
Some devices, even though you're 
not touching the bootloader,

193
00:10:55,480 --> 00:11:00,000
still wants you to unlock the bootloader in 
order to make modifications to your system.

194
00:11:00,000 --> 00:11:01,880
So it's always best to turn it on.

195
00:11:01,880 --> 00:11:06,600
However, if you do run into a very rare case 
where this option is completely missing,

196
00:11:06,600 --> 00:11:11,920
please do refer to this guide, where it 
tells you to set your date seven days behind.

197
00:11:11,920 --> 00:11:13,480
Otherwise, if you still can't find it,  

198
00:11:13,480 --> 00:11:18,000
you probably have to reinstall the 
stock firmware that you're currently on.

199
00:11:18,000 --> 00:11:20,880
Right, after you've went through 
your PIN, it would tell you:

200
00:11:20,880 --> 00:11:26,480
"Warning: Device protection features will not work 
on this device while this setting is turned on."

201
00:11:26,480 --> 00:11:30,360
That's fine because we're not going 
to be using this OS anymore anyways.

202
00:11:30,360 --> 00:11:35,040
Right, now with that enabled, all we 
have to do is say goodbye to this.

203
00:11:35,040 --> 00:11:37,560
Oh, you weren't expecting goodbye?

204
00:11:37,560 --> 00:11:40,560
Well then, do your backups right now.

205
00:11:40,560 --> 00:11:44,520
You are going to say goodbye 
to this instance of your phone.

206
00:11:44,520 --> 00:11:48,600
You're going to say hello to 
a brand new operating system.

207
00:11:48,600 --> 00:11:52,320
Okay, now that you've backed up everything, 
and you're about to say goodbye to this OS,

208
00:11:52,320 --> 00:11:53,760
we're gonna shut it down.

209
00:11:53,760 --> 00:11:56,800
Good night.

210
00:11:56,800 --> 00:12:02,160
Now that we turned the phone off, what we need 
is a USB cable that corresponds to your phone,

211
00:12:02,160 --> 00:12:04,640
which in my case, I got a type-c cable.

212
00:12:04,640 --> 00:12:08,880
Now this step varies significantly 
depending on phone models.

213
00:12:08,880 --> 00:12:11,560
Some phones would have different combinations,

214
00:12:11,560 --> 00:12:13,880
some phones would have different steps.

215
00:12:13,880 --> 00:12:18,120
You're going to need to find 
a step on how to enable Odin,

216
00:12:18,120 --> 00:12:22,320
at least for the Samsung devices, 
which in the case of Galaxy Note 10+,

217
00:12:22,320 --> 00:12:26,480
what you have to do is press 
the plus and minus volume key,

218
00:12:26,480 --> 00:12:28,200
the up and down key, volume key,

219
00:12:28,200 --> 00:12:32,960
which I could kind of just 
mash it with my my hands

220
00:12:32,960 --> 00:12:37,480
and stick the USB device, uh USB cable in.

221
00:12:37,480 --> 00:12:38,560
It should turn down with a

222
00:12:38,560 --> 00:12:40,640
completely different screen like this.

223
00:12:40,640 --> 00:12:44,960
"Warning, a custom OS can cause critical 
problems in the phone and installed applications.

224
00:12:44,960 --> 00:12:48,240
If you want to download a custom 
OS, press the volume up key."

225
00:12:48,240 --> 00:12:52,440
Now there is a second layer of 
of unlocking that we have to do.

226
00:12:52,440 --> 00:12:54,240
We have unlocked the bootloader,

227
00:12:54,240 --> 00:12:58,200
but we haven't really unlocked 
the bootloader proper.

228
00:12:58,200 --> 00:13:01,880
So what we have to do is actually 
press and hold the volume up key,

229
00:13:01,880 --> 00:13:03,360
as what it says right here.

230
00:13:03,360 --> 00:13:06,000
It would ask you whether you 
want to unlock your bootloader.

231
00:13:06,000 --> 00:13:07,920
We will definitely need this because

232
00:13:07,920 --> 00:13:12,280
otherwise we will not be able to install 
custom Android OSes on Samsung phones.

233
00:13:12,280 --> 00:13:15,280
So like it says, like it says volume up to yes,

234
00:13:15,280 --> 00:13:16,640
we're going to press volume up.

235
00:13:16,640 --> 00:13:21,120
Now it says this phone's bootloader is unlocked 
and its software integrity can't be verified.

236
00:13:21,120 --> 00:13:23,160
Very well, that's exactly what we need.

237
00:13:23,160 --> 00:13:26,760
But considering how the phone rebooted 
itself and erased all the data,

238
00:13:26,760 --> 00:13:30,360
we need to jump back to that same 
screen that we were at earlier.

239
00:13:30,360 --> 00:13:32,040
And that's because Samsung requires you  

240
00:13:32,040 --> 00:13:35,160
to activate your device for 
some weird fucking reason.

241
00:13:35,160 --> 00:13:38,880
That means you have to go through all 
the freaking setup all over again.

242
00:13:38,880 --> 00:13:43,200
So all you need to do is connect to the 
internet and skip through all the setup.

243
00:13:43,200 --> 00:13:45,520
When you head back to the [Developer Settings],

244
00:13:45,520 --> 00:13:48,320
you'll see that your 
bootloader is already unlocked.

245
00:13:48,320 --> 00:13:51,920
Right, what we need to do now is 
to get this phone into Odin mode.

246
00:13:51,920 --> 00:13:54,680
And to do that, I'm going to 
press these two buttons together

247
00:13:54,680 --> 00:13:57,880
and stick in the USB to get back to this screen.

248
00:13:57,880 --> 00:13:59,640
Volume up to continue.

249
00:13:59,640 --> 00:14:02,920
Now what we want to do is 
select the recovery image

250
00:14:02,920 --> 00:14:08,000
that we just downloaded from 
Google Drive and press on start.

251
00:14:08,000 --> 00:14:12,000
Once that's done, immediately press 
the power and the volume up key

252
00:14:12,000 --> 00:14:15,000
until you see the recovery screen.

253
00:14:15,000 --> 00:14:16,640
Now before we do any flashing,

254
00:14:16,640 --> 00:14:20,920
we're going to make sure that we have 
formatted all the data and factory reset.

255
00:14:20,920 --> 00:14:25,840
We're going to make sure that we're 
cleaning up the entirety of the drive

256
00:14:25,840 --> 00:14:30,960
because we don't want any leftovers from 
Samsung OneUI to be affecting our process.

257
00:14:30,960 --> 00:14:37,680
Right, what we want to do next is to head 
down to [Apply update] and [Apply from ADB].

258
00:14:37,680 --> 00:14:40,320
This puts this phone on ADB sideload.

259
00:14:40,320 --> 00:14:41,600
And what does this mean?

260
00:14:41,600 --> 00:14:43,600
Is that we have to get onto terminal

261
00:14:43,600 --> 00:14:48,000
and you're going to need a binary 
called ADB or Android Debug Bridge.

262
00:14:48,000 --> 00:14:49,640
If you don't have it, you gotta get it.

263
00:14:49,640 --> 00:14:52,520
And put it somewhere convenient 
where your terminal can see

264
00:14:52,520 --> 00:14:54,800
or add it into your environment path.

265
00:14:54,800 --> 00:14:57,960
Right, to make sure that the ADB can 
actually see the device right now,

266
00:14:57,960 --> 00:15:00,360
we're going to type [adb devices]

267
00:15:00,360 --> 00:15:02,120
and then we get to see the device right there.

268
00:15:02,120 --> 00:15:06,120
And what we want to do is type [adb sideload]

269
00:15:06,120 --> 00:15:11,960
and we got to copy the firmware file name in its 
whole including the zip file, including the [.zip]

270
00:15:11,960 --> 00:15:15,200
and paste it in and press enter.

271
00:15:15,200 --> 00:15:19,040
This should ship the ROM file into the recovery

272
00:15:19,040 --> 00:15:23,240
and that should be our first step 
into a brand new operating system.

273
00:15:23,240 --> 00:15:26,160
Alright, once that's done, we're going 
to press [Factory reset] once more,

274
00:15:26,160 --> 00:15:29,880
but this time only [Factory reset/Format data].

275
00:15:29,880 --> 00:15:33,200
And then finally, we can reboot.

276
00:15:33,200 --> 00:15:37,680
Now every time we boot, it's going to give us 
the warning of the bootloader being unlocked,

277
00:15:37,680 --> 00:15:39,000
but we need to keep it unlocked

278
00:15:39,000 --> 00:15:44,600
considering how we're using a custom OS that is 
well outside of Samsung's own operating system.

279
00:15:44,600 --> 00:15:48,040
When it boots up, it goes through a 
lot of the first time setup stuff,

280
00:15:48,040 --> 00:15:52,680
so don't panic when it takes quite 
long to start on its first boot.

281
00:15:52,680 --> 00:15:55,560
Usually it would take up to 10 to 15 minutes.

282
00:15:55,560 --> 00:15:57,800
If you're lucky, it would take shorter than that.

283
00:15:57,800 --> 00:15:59,880
So in the meantime, go ahead and have a cup of tea

284
00:15:59,880 --> 00:16:03,560
or grab some snacks while you wait 
for this to finish booting up.

285
00:16:03,560 --> 00:16:05,000
Hey, here we are.

286
00:16:05,000 --> 00:16:07,560
By the way, we're completely 
through the flashing process now,

287
00:16:07,560 --> 00:16:10,880
so we can just unplug the 
device if we feel like it.

288
00:16:10,880 --> 00:16:13,640
And now this is going to be 
your proper operating system,

289
00:16:13,640 --> 00:16:16,600
so just run through the setup 
the way you usually would.

290
00:16:16,600 --> 00:16:19,360
"Set up using another device?" Nah, I'm good.

291
00:16:19,360 --> 00:16:20,840
"Getting your phone ready."

292
00:16:20,840 --> 00:16:22,960
"This may take a few minutes."

293
00:16:22,960 --> 00:16:28,480
"Set up a PIN?" Later.

294
00:16:28,480 --> 00:16:32,480
And there you have it. PixelOS.

295
00:16:32,480 --> 00:16:38,000
And as you can see, the sets of applications 
that are here are very, very bare bones,

296
00:16:38,000 --> 00:16:40,120
and that's expected of PixelOS.

297
00:16:40,120 --> 00:16:45,160
Now say you don't want PixelOS, how 
do we install crDroid or LineageOS?

298
00:16:45,160 --> 00:16:49,240
Or say you want a different operating 
system for this Samsung phone.

299
00:16:49,240 --> 00:16:52,360
We're gonna run through this 
whole process once again.

300
00:16:52,360 --> 00:16:56,920
Right, now that we know how to install 
Pixel OS onto the Galaxy Note 10+,

301
00:16:56,920 --> 00:17:00,160
we're gonna do the same with 
crDroid, just with one extra step.

302
00:17:00,160 --> 00:17:05,440
They're not all too different, so we should 
be able to follow the exact same steps.

303
00:17:05,440 --> 00:17:08,720
So starting, we're gonna need Odin as usual,

304
00:17:08,720 --> 00:17:10,520
and we're gonna need our recovery.

305
00:17:10,520 --> 00:17:16,840
So what you want to do is 
rename it to [recovery.img].

306
00:17:16,840 --> 00:17:23,520
Add it into a tar archive using your favorite 
archive tool, say for example 7-zip or WinRAR.

307
00:17:23,520 --> 00:17:26,320
With that, we would have the resulting .tar file.

308
00:17:26,320 --> 00:17:31,200
Now what you want to do is click on 
AP in Odin, and open [recovery.tar].

309
00:17:31,200 --> 00:17:33,800
Now that we got it all prepped 
up, let's take the phone.

310
00:17:33,800 --> 00:17:35,240
Remember these usual steps.

311
00:17:35,240 --> 00:17:39,120
Volume up and down, and USB in.

312
00:17:39,120 --> 00:17:39,560
Oi!

313
00:17:39,560 --> 00:17:43,480
And we should get that same old 
screen that we just had some time ago.

314
00:17:43,480 --> 00:17:47,600
Here, let me just get it zoomed in so 
you can see it real clearly like that.

315
00:17:47,600 --> 00:17:49,240
And what we want to do is as usual,

316
00:17:49,240 --> 00:17:54,680
if we have already unlocked the bootloader, 
then we should just press volume up.

317
00:17:54,680 --> 00:17:57,480
And now it should consider being connected.

318
00:17:57,480 --> 00:18:00,640
As we can see on Odin, we 
have something connected.

319
00:18:00,640 --> 00:18:05,560
And now we just have to push 
it in into the device that way.

320
00:18:05,560 --> 00:18:09,040
It should be relatively fast 
and it should not take long.

321
00:18:09,040 --> 00:18:15,600
And now that we've done that, we're gonna press 
our power button up to get into the recovery.

322
00:18:15,600 --> 00:18:19,400
There are times where you end up screwing up and 
you end up booting back into your Android OS.

323
00:18:19,400 --> 00:18:20,360
That's perfectly fine.

324
00:18:20,360 --> 00:18:23,240
So what you want to do is get the phone back down,

325
00:18:23,240 --> 00:18:28,880
and what you want to do is press the 
volume up key and the power button.

326
00:18:28,880 --> 00:18:34,560
If fuck all doesn't work, you can always 
open up the [Developer options] once again.

327
00:18:34,560 --> 00:18:37,440
Head down to [USB debugging] and turn it on.

328
00:18:37,440 --> 00:18:40,800
Now that we're there, we're 
gonna open up our terminal.

329
00:18:40,800 --> 00:18:46,000
Plug in the device and type 
the following: [adb devices]

330
00:18:46,000 --> 00:18:52,120
because what we want to do is check 
if it can find the said device.

331
00:18:52,120 --> 00:18:57,200
And usually it would just ask you 
if you would allow USB debugging.

332
00:18:57,200 --> 00:19:00,160
That usually is a good signal that it works.

333
00:19:00,160 --> 00:19:05,360
And now that we tried it again, you can see 
that now the device has been shown as [Device].

334
00:19:05,360 --> 00:19:09,800
We can now jump straight into the recovery 
without pressing these stupid combinations.

335
00:19:09,800 --> 00:19:16,280
By typing [adb reboot recovery], press enter,

336
00:19:16,280 --> 00:19:19,560
and this should take the device 
straight to the recovery.

337
00:19:19,560 --> 00:19:21,680
Now that we're on crDroid recovery,

338
00:19:21,680 --> 00:19:27,760
what you want to do is do the usual wipe 
and clean up that we have done before.

339
00:19:27,760 --> 00:19:31,000
So [Format data], format 
everything, clean everything up.

340
00:19:31,000 --> 00:19:34,080
We don't want any traces from 
the previous installation,

341
00:19:34,080 --> 00:19:39,040
because different ROMs can result in 
different ways of implementing shit.

342
00:19:39,040 --> 00:19:43,200
They're all not exactly the same, so 
we're gonna need to format everything,

343
00:19:43,200 --> 00:19:47,000
clean them all up, and prep 
this thing for flashing.

344
00:19:47,000 --> 00:19:48,560
Once we've done all three of them,

345
00:19:48,560 --> 00:19:52,920
we're gonna now hit to [Apply update] 
and [Apply from ADB] once more.

346
00:19:52,920 --> 00:19:55,600
Now that we're here, we're gonna 
do a really important step.

347
00:19:55,600 --> 00:20:02,080
[adb sideload], and what you 
want to do is take the ROM file,

348
00:20:02,080 --> 00:20:04,760
which if your terminal is already in the directory

349
00:20:04,760 --> 00:20:09,160
where your desired folder is 
at, you could just put the name.

350
00:20:09,160 --> 00:20:14,920
Otherwise, you're gonna need to 
drag the file in and press enter.

351
00:20:14,920 --> 00:20:17,840
Now that it's done, we still got one more step.

352
00:20:17,840 --> 00:20:21,120
Like I said earlier, some ROMs do 
not include Google Play services

353
00:20:21,120 --> 00:20:25,880
and other Google require 
stuff for Google Play to work,

354
00:20:25,880 --> 00:20:28,080
so we're gonna need to install that as well.

355
00:20:28,080 --> 00:20:31,760
So if you remember that we've 
downloaded this MindTheGApps zip,

356
00:20:31,760 --> 00:20:35,640
now it's the time we're gonna sideload this 
on top of the ROM that we've just installed.

357
00:20:35,640 --> 00:20:39,640
So we're gonna click [Apply update] 
and click [Apply from ADB] once more.

358
00:20:39,640 --> 00:20:42,800
At this point, it should be 
relatively self-explanatory.

359
00:20:42,800 --> 00:20:50,840
[adb sideload], and the file, and we press enter.

360
00:20:50,840 --> 00:20:54,760
This should install MindTheGApps 
and do all the job for us.

361
00:20:54,760 --> 00:20:58,120
Now that it's done, what do we want 
to do is just reboot the system now.

362
00:20:58,120 --> 00:21:01,200
We're done here. You're finally on crDroid.

363
00:21:01,200 --> 00:21:03,360
Now if you remember from the video earlier,

364
00:21:03,360 --> 00:21:06,720
it does take a while for 
crDroid to finish booting up.

365
00:21:06,720 --> 00:21:09,960
And here we are now. We're finally on crDroid.

366
00:21:09,960 --> 00:21:12,560
Now we just have to run 
through the setup like usual.

367
00:21:12,560 --> 00:21:15,880
Once you've gone through all the 
setup, there's only one button.

368
00:21:15,880 --> 00:21:16,829
Start.

369
00:21:20,680 --> 00:21:23,240
And here we are. We're finally now on crDroid.

370
00:21:23,240 --> 00:21:27,400
I wouldn't say the cleanest, but it is 
relatively clean of an operating system.

371
00:21:27,400 --> 00:21:32,240
What I really like a lot personally about 
crDroid is that they have extra stuff

372
00:21:32,240 --> 00:21:35,280
that you can change that are mostly cosmetics.

373
00:21:35,280 --> 00:21:41,760
However, as cosmetic as they are, they can make 
your phone feel kind of unique to yourself.

374
00:21:41,760 --> 00:21:43,280
Some of which are functional,

375
00:21:43,280 --> 00:21:47,280
or say for example, you want to unlock 
higher frame rates for certain games.

376
00:21:47,280 --> 00:21:48,640
You have an option for that.

377
00:21:48,640 --> 00:21:51,160
Or you could also have unlimited photo storage

378
00:21:51,160 --> 00:21:54,400
that mimics the benefits 
that Pixel XL usually have.

379
00:21:54,400 --> 00:21:58,120
And there's a whole slew of other different 
kind of quality of life improvements

380
00:21:58,120 --> 00:22:02,600
that I personally like that you don't 
get from its upstream, namely LineageOS.

381
00:22:02,600 --> 00:22:05,880
So I'm definitely going to be daily 
driving the crDroid personally.

382
00:22:05,880 --> 00:22:06,800
And there you have it.

383
00:22:06,800 --> 00:22:12,000
We finally breathed new life to an Android device 
that we could have otherwise thrown as e-waste.

384
00:22:12,000 --> 00:22:16,080
Now if you do enjoy this video, be sure 
to press the like button, subscribe,

385
00:22:16,080 --> 00:22:19,560
and be sure to check out all the 
resources I have in the description below

386
00:22:19,560 --> 00:22:21,600
for where you need to download these files.

387
00:22:21,600 --> 00:22:25,520
And I hope you enjoy one of 
my first few tech videos.

388
00:22:25,520 --> 00:22:27,920
And with that said, thank 
you all so much for watching.

389
00:22:27,920 --> 00:22:28,640
See you guys next time.

390
00:22:28,640 --> 00:22:30,560
Otsu-Melo deshita! (It's been Mel here.)

391
00:22:30,560 --> 00:22:33,200
See ya!

392
00:22:33,200 --> 00:22:36,565
And with that out of the way, time 
to tell you about our sponsor.

393
00:22:47,240 --> 00:22:49,200
Tired of slowness and long loading?

394
00:22:49,200 --> 00:22:51,120
Want to make more space for your stuff?

395
00:22:51,120 --> 00:22:53,120
Well, SD Maid SE is here to help.

396
00:22:53,120 --> 00:22:57,440
SD Maid SE is a junk cleaner made 
by an indie developer named Darken.

397
00:22:57,440 --> 00:23:01,160
Some apps tend to leave leftover files we 
don't need after we're done using them.

398
00:23:01,160 --> 00:23:03,640
That's where SD Maid SE comes in to help.

399
00:23:03,640 --> 00:23:06,160
Now you can do that manually, but time is money.

400
00:23:06,160 --> 00:23:09,200
With SD Maid SE, you can 
automate a good deal of that,

401
00:23:09,200 --> 00:23:12,400
and leave precious times to the 
things that really matter the most.

402
00:23:12,400 --> 00:23:14,400
Unlike other system junk cleaners,

403
00:23:14,400 --> 00:23:18,000
SD Maid SE does not collect any 
form of personally identifiable info

404
00:23:18,000 --> 00:23:21,120
that could be sold to scummy 
data miners for profit.

405
00:23:21,120 --> 00:23:24,520
Nor does it bombard you with a 
fuckton of ads that waste your time.

406
00:23:24,520 --> 00:23:26,200
Like I said, time is money!

407
00:23:26,200 --> 00:23:30,880
SD Maid SE heavily relies on the generosity 
of the community to stay alive and going.

408
00:23:30,880 --> 00:23:33,000
App improvements happen with 
the help and contribution

409
00:23:33,000 --> 00:23:35,680
from the great community in GitHub and Discord.

410
00:23:35,680 --> 00:23:39,320
So if there's any bug with 
the app, you're never alone.

411
00:23:39,320 --> 00:23:40,280
What are you waiting for?

412
00:23:40,280 --> 00:23:43,080
Get your phone cleaned with SD 
Maid SE on the Google Play Store

413
00:23:43,080 --> 00:23:45,560
or GitHub in the description below.

414
00:23:45,560 --> 00:23:47,760
Oh, maybe I should clean my phone screen too.

415
00:23:47,760 --> 00:23:49,840
With that, thanks to Darken 
Development for encouraging me

416
00:23:49,840 --> 00:23:51,600
to walk forward in content creation.

417
00:23:51,600 --> 00:23:52,672
Catch you next time!

