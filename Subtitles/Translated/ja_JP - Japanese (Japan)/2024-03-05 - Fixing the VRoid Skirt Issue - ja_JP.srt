1
00:00:10,183 --> 00:00:12,743
真夜中でした。

2
00:00:12,743 --> 00:00:17,850
静かで穏やかで、パソコンが動いている音だけが聞こえていました。

3
00:00:22,649 --> 00:00:27,330
モデルの作業をするのにちょうどいい時間だと思いました。

4
00:00:35,816 --> 00:00:41,700
座って、Unityを開き、モデルを更新しているプロジェクトを開きました。

5
00:00:45,083 --> 00:00:49,560
ご存知かもしれませんが、髪の毛やスカートには物理演算が適用されており、

6
00:00:49,566 --> 00:00:53,510
それらが意図したとおりに動作するようにするのは、モデルリガーの仕事です。

7
00:00:53,516 --> 00:00:57,330
その日は、それらの改善作業を予定していました。

8
00:00:57,333 --> 00:00:59,680
そこで、一連のチェックを行い、

9
00:00:59,683 --> 00:01:03,700
プレイモードに入って体の部分を動かしてみました。

10
00:01:03,700 --> 00:01:05,910
髪の毛は良好で、

11
00:01:06,433 --> 00:01:11,950
スカートも良好でしたが、脚を上げた途端に問題が発生しました。

12
00:01:17,583 --> 00:01:23,290
一時的な問題かと思い、両足で確認してみることにしました。

13
00:01:36,066 --> 00:01:38,780
スカートが広がってしまいました。

14
00:01:38,783 --> 00:01:40,660
ここで混乱しました。

15
00:01:40,666 --> 00:01:43,040
そこでGoogleで検索してみました。

16
00:01:43,049 --> 00:01:46,630
残念ながら、決定的な情報は見つからず、

17
00:01:46,633 --> 00:01:49,610
何週間も調査を続けました。

18
00:01:49,616 --> 00:01:54,200
そして、日本語だけのツイッターのスレッドにたどり着きました。

19
00:01:54,200 --> 00:01:57,710
そこには必要な情報がすべて説明されていました。

20
00:01:58,033 --> 00:02:02,830
VRM Spring Boneのスカートコリジョン対策について、

21
00:02:02,833 --> 00:02:06,290
有用な記事が見つけられなかったので、

22
00:02:06,299 --> 00:02:10,960
これまでの調査結果を自分なりにまとめてみたいと思います。

23
00:02:10,966 --> 00:02:15,690
VRM Spring BoneとDynamic Boneの比較：

24
00:02:15,699 --> 00:02:18,150

ボーンの動きの方向は固定/一定ではありません。

25
00:02:18,150 --> 00:02:21,410
半径のサイズは個別に変更できません

26
00:02:21,416 --> 00:02:25,650
（同じサイズグループ内のサイズは常に一定です）。

27
00:02:25,650 --> 00:02:30,590
しかし、現在はこれらの問題を

28
00:02:30,599 --> 00:02:32,580
一括で解決する手段がないため、

29
00:02:32,583 --> 00:02:37,110
「力ずく」で解決策を見つけることにしました。

30
00:02:37,116 --> 00:02:39,580
しかし、前述の点について、

31
00:02:39,583 --> 00:02:43,550
単に脚のメッシュ形状に沿ってコライダーを配置すると、

32
00:02:43,550 --> 00:02:46,250
スカートの半径がコライダーの

33
00:02:46,250 --> 00:02:48,060
球面に沿ってはみ出してしまいます。

34
00:02:48,066 --> 00:02:51,780
そこで、脚に沿って配置された足の内側に

35
00:02:51,783 --> 00:02:56,530
もう1列（またはそれ以上）のコライダーを追加しましょう。

36
00:02:56,533 --> 00:03:00,830
そうすることで、スカートの半径は「板」によって押し出され、

37
00:03:00,833 --> 00:03:05,010
単なる「球体」よりもはみ出しが少なくなります。

38
00:03:05,016 --> 00:03:09,060
この場合、各コライダーは小さくする必要があり、

39
00:03:09,066 --> 00:03:11,030
多くのコライダーを一列に

40
00:03:11,033 --> 00:03:13,160
配置することで精度を向上できます。

41
00:03:13,166 --> 00:03:18,110
コライダーを「内側に」配置する主な理由は、

42
00:03:18,116 --> 00:03:22,050
外側に配置すると、

43
00:03:22,050 --> 00:03:29,260
静止状態でもスカートと干渉してしまうからです。

44
00:03:29,266 --> 00:03:32,760
プロセス全体を自動化するBoothのツールについても言及されていましたが、

45
00:03:32,766 --> 00:03:35,030
それは後ほど説明します。

46
00:03:35,033 --> 00:03:37,900
もし当たり判定の半径が少し大きすぎて、

47
00:03:37,900 --> 00:03:41,590
コライダーとの相互作用で少し飛び出してしまう場合は、

48
00:03:41,599 --> 00:03:45,110
重力値などの設定を調整して、

49
00:03:45,116 --> 00:03:47,480
より自然な動きにしてください。

50
00:03:47,483 --> 00:03:51,730
VRMは、VRoidなどの公式アプリケーションで見る際の

51
00:03:51,733 --> 00:03:53,940
「立ち姿に特化した」

52
00:03:53,949 --> 00:03:56,190
デザインコンセプトを示す規格です。

53
00:03:56,199 --> 00:03:59,960
しかし、近年、サードパーティのアプリケーションが

54
00:03:59,966 --> 00:04:01,560
次々と登場し、

55
00:04:01,566 --> 00:04:04,260
激しい動きが必要な場面が

56
00:04:04,266 --> 00:04:05,810
増えてきています。

57
00:04:05,816 --> 00:04:08,630
このスレッドを締めくくるにあたり、

58
00:04:08,633 --> 00:04:13,090
早急な対応が取られることを心から願っています。

59
00:04:13,099 --> 00:04:15,690
まだ研究段階かもしれませんが、

60
00:04:15,699 --> 00:04:20,440
今後、VRoid以外のアプリケーションから

61
00:04:20,449 --> 00:04:23,060
VRMアバターを作成するニーズは増えていくと考えており、

62
00:04:23,066 --> 00:04:27,434
これがそういった方々の助けになれば幸いです。

63
00:04:27,434 --> 00:04:30,980
あまり理解できない方のために説明すると、ボーンとはAからBまでの点で、

64
00:04:30,983 --> 00:04:33,130
オブジェクトの変形方法を決定します。

65
00:04:33,133 --> 00:04:35,800
一方、コライダーは物体同士がどのように接触し、

66
00:04:35,800 --> 00:04:37,390
すり抜けないようにするかを決定します。

67
00:04:37,399 --> 00:04:41,330
ただし、VRMの場合は通常球体のみです。

68
00:04:41,333 --> 00:04:44,980
この2つが組み合わさることで、オブジェクトが

69
00:04:44,983 --> 00:04:47,810
別のオブジェクトに触れている視覚的な表現が可能になります。

70
00:04:47,816 --> 00:04:52,560
そこで、脚とスカートの間のコライダーを確認してみると…

71
00:04:53,066 --> 00:04:54,660
あー…

72
00:04:54,666 --> 00:04:56,010
はい…

73
00:04:56,016 --> 00:04:57,610
何とかしないといけませんね。

74
00:04:57,616 --> 00:04:59,710
これは私のモデルの問題であり、

75
00:04:59,716 --> 00:05:02,360
Vroidでモデルを生成した他の人々にも関係するため、

76
00:05:02,366 --> 00:05:04,460
Blenderで修正する必要があります。

77
00:05:04,466 --> 00:05:06,430
もし理解できなかった場合は、

78
00:05:06,433 --> 00:05:09,680
ボーンの開始点が低すぎるため、スカートが

79
00:05:09,683 --> 00:05:12,430
しゃがみや座るなどの極端な角度で脚を動かすと、

80
00:05:12,433 --> 00:05:14,580
正常に機能しないということです。

81
00:05:14,583 --> 00:05:17,080
スカートのリギングを修正するには、

82
00:05:17,083 --> 00:05:20,500
PierrickとKana FuyukoのBlenderでのスカートリギングガイドをチェックすることをお勧めします。

83
00:05:20,500 --> 00:05:23,410
簡単に説明すると、私が行った作業は以下の通りです。

84
00:05:23,416 --> 00:05:26,980
ドレスを分離し、不要な頂点とボーンを整理し、

85
00:05:26,983 --> 00:05:31,890
対称性を確認し、モデルに2層のスカートがある場合は頂点を結合し、

86
00:05:31,899 --> 00:05:35,260
新しいボーンセットを作成してリギングとウェイトペイントを行い、

87
00:05:35,266 --> 00:05:40,280
スカートをモデルに再結合し、テストして、最後にエクスポートします。

88
00:05:40,283 --> 00:05:43,560
この部分が終わったので、LiveMelに引き継ぎましょう。

89
00:05:43,566 --> 00:05:44,880
ありがとうございます、VoiceOverMel！

90
00:05:44,883 --> 00:05:49,380
さて、UniVRMのパッケージをインポートし、

91
00:05:49,383 --> 00:05:52,580
また、2つの異なるバージョンのモデルもインポートしました。

92
00:05:52,583 --> 00:05:55,980
実際にどのような違いが出るのかお見せできます。

93
00:05:55,983 --> 00:05:58,750
まず最初のフェーズでは、間違った方法で行ってみましょう。

94
00:05:58,750 --> 00:06:01,160
モデルを再リギングしていない場合、

95
00:06:01,166 --> 00:06:02,850
このような見た目になります。

96
00:06:02,850 --> 00:06:09,580
今配置してみると、ラインがここから始まっているのが分かります。本来ならここ上の方から始まるはずですが、

97
00:06:09,583 --> 00:06:15,300
太もも部分にしかコライダーが数個しかないのが見えます。

98
00:06:15,300 --> 00:06:20,780
このままにしておいて、コンパイルすると、

99
00:06:20,783 --> 00:06:25,660
このビデオの最初に見たのと全く同じ結果になります。

100
00:06:25,666 --> 00:06:34,830
腰、上脚に下がって動かすと、広がってしまうのが分かります。

101
00:06:34,833 --> 00:06:37,640
では、何が起こったのか説明しましょう。

102
00:06:37,649 --> 00:06:42,140
今上げた脚のこの枝を見てみると、

103
00:06:42,149 --> 00:06:44,890
スカートのボーンがその下にあることが分かります。

104
00:06:44,899 --> 00:06:49,190
つまり、脚を回転させると、スカートもそれに従って動くということです。

105
00:06:49,199 --> 00:06:51,060
まあ、技術的には自問自答できますよね。

106
00:06:51,066 --> 00:06:55,680
「ねえMel、これらを腰に移動させればいいじゃない？」って。

107
00:06:55,683 --> 00:06:59,530
そうして脚を上げてみると、

108
00:07:00,300 --> 00:07:02,980
スカートがすり抜けてしまうのが分かります。

109
00:07:02,983 --> 00:07:04,890
それは、セカンダリーを見てみると、

110
00:07:04,899 --> 00:07:09,140
オブジェクトのコライダーが全て配置される場所ですが、

111
00:07:09,149 --> 00:07:14,582
正面から見ると分かるように、

112
00:07:14,582 --> 00:07:20,280
ボーンがコライダーを完全に貫通してしまい、

113
00:07:20,283 --> 00:07:24,580
コライダーボールがかろうじて外れてしまいます。

114
00:07:24,583 --> 00:07:29,460
ご覧の通り、このくらいかろうじて、という具合です。

115
00:07:29,466 --> 00:07:34,180
キャラクターをクリックすると、かろうじて通り抜けているのが分かります。

116
00:07:34,183 --> 00:07:38,190
「これらのボールのサイズを大きくすればいいじゃないか」と思うかもしれません。

117
00:07:38,199 --> 00:07:39,460
確かにできます。

118
00:07:39,466 --> 00:07:48,100
スカートセクションに行って、半径をこのように大きくします。

119
00:07:48,100 --> 00:07:52,600
しかし、これではこのように制御不能になってしまう可能性があります。

120
00:07:52,600 --> 00:07:57,860
それは開始点が下にある、というか、

121
00:07:57,866 --> 00:08:01,080
太ももの位置にあるからです。

122
00:08:01,083 --> 00:08:03,660
そしてボールは太ももの外側にあるので、

123
00:08:03,666 --> 00:08:09,610
文字通り太ももと並んで相互作用しているのです。

124
00:08:09,616 --> 00:08:12,530
どのように修正しようとしても、

125
00:08:12,533 --> 00:08:16,210
スカートを再リギングしなければ修正は非常に困難です。

126
00:08:16,216 --> 00:08:18,780
でも、修正方法はお見せしましょう。

127
00:08:18,783 --> 00:08:24,310
まず、私が「ボウル法」と呼ぶものを作成します。

128
00:08:24,316 --> 00:08:27,880
先ほどのTwitterスレッドを参照すると、

129
00:08:27,883 --> 00:08:30,380
平面法で作成すると言っています。

130
00:08:30,383 --> 00:08:35,730
私の意見では、平面法では遠くに滑っていってしまう可能性があります。

131
00:08:35,733 --> 00:08:39,930
そこで私はボウル法を好みます。上から見ると、

132
00:08:39,933 --> 00:08:42,140
スカートのボーンを

133
00:08:42,149 --> 00:08:46,830
所定の位置に収める、ボウルのような形状を作ることができます。

134
00:08:46,833 --> 00:08:50,750
ただし、これは太ももを横に動かすと、

135
00:08:50,750 --> 00:08:52,380
スカートも一緒に動くことを意味します。

136
00:08:52,383 --> 00:08:56,080
しかし、これはスプリングボーンの限界です。

137
00:08:56,083 --> 00:08:58,410
これが限界なのです。

138
00:08:58,416 --> 00:09:02,060
ただし、問題の一部は解決されます。

139
00:09:02,066 --> 00:09:03,750
さて、一つずつ始めましょう。

140
00:09:03,750 --> 00:09:07,530
コライダーの開始点が下の方にあることが分かっているので、

141
00:09:07,533 --> 00:09:10,330
上の方のものを下げていきます。

142
00:09:10,333 --> 00:09:14,760
それは実際には必要ないので、あまり気にする必要はありません。

143
00:09:14,766 --> 00:09:18,197
それを削除しましょう。

144
00:09:18,197 --> 00:09:25,680
そして、このように2番目の新しいものを作ります。

145
00:09:25,683 --> 00:09:31,710
そして、このようにできるだけ多くのパラメータをコピーしようとします。

146
00:09:32,216 --> 00:09:38,880
そして今度は横に新しいものを作ります。

147
00:09:38,883 --> 00:09:42,610
そうではなく、このように。

148
00:09:43,233 --> 00:09:48,390
そして少し前に動かし、

149
00:09:48,399 --> 00:09:54,830
そのコライダーの反対側に新しいものを作ります。

150
00:09:54,833 --> 00:09:56,830
このような感じです。

151
00:09:56,833 --> 00:09:59,560
コンセプトが掴めると思います。

152
00:09:59,566 --> 00:10:02,160
このようなコンセプトです。

153
00:10:02,166 --> 00:10:05,390
これを数層繰り返します。

154
00:10:05,399 --> 00:10:07,930
その後、セカンダリーに移動します。

155
00:10:07,933 --> 00:10:13,030
セカンダリーに行って、

156
00:10:13,033 --> 00:10:18,500
脚をそれらのスカートコライダーに割り当てます。

157
00:10:18,500 --> 00:10:21,610
ここで新たな問題が発生します。

158
00:10:21,616 --> 00:10:22,960
脚で行ったので、

159
00:10:22,966 --> 00:10:27,510
スカート全体がそのボルトと相互作用することになります。

160
00:10:27,516 --> 00:10:28,980
それをどうやって防ぐのか？

161
00:10:28,983 --> 00:10:29,880
簡単です。

162
00:10:29,883 --> 00:10:36,290
脚を右クリックして、新しい子オブジェクトを作ります。

163
00:10:36,299 --> 00:10:38,500
空のGameObject子です。

164
00:10:38,500 --> 00:10:49,450
例えば、ForSkirtFrontLeftと名付けます。

165
00:10:49,916 --> 00:10:55,360
そして、upper leg spring bone collider groupを使う代わりに、

166
00:10:55,366 --> 00:11:01,130
これをこちらに移動し、

167
00:11:01,133 --> 00:11:07,930
これらをセカンダリーのコライダーグループとして設定します。

168
00:11:07,933 --> 00:11:10,140
ただし、これはかなり面倒な作業になり得ます。

169
00:11:10,149 --> 00:11:13,910
特に前後左右の各角度に対して

170
00:11:13,916 --> 00:11:17,000
複数の列を作成する必要がある場合は。

171
00:11:17,000 --> 00:11:19,580
そのため、このチュートリアルでは実際には行いません。

172
00:11:19,583 --> 00:11:23,560
ただし、私は自分用に事前に作成してあります。

173
00:11:24,750 --> 00:11:26,710
これが例です。

174
00:11:26,716 --> 00:11:29,180
脚の中を見ると、

175
00:11:29,183 --> 00:11:34,450
upper leg collidersという専用のセクションを作成したことが分かります。

176
00:11:34,450 --> 00:11:38,060
それぞれに、例えば中心のものがあり、

177
00:11:38,066 --> 00:11:40,390
それから側面用のものがあります。

178
00:11:40,399 --> 00:11:44,290
前面、左側、前側面。

179
00:11:44,299 --> 00:11:47,960
基本的に、この程度をカバーしています。

180
00:11:47,966 --> 00:11:49,880
全ての円を見ると、

181
00:11:49,883 --> 00:11:56,160
1、2、3、4、5、6、7というような感じです。

182
00:11:56,166 --> 00:11:57,600
この程度の角度です。

183
00:11:57,600 --> 00:12:03,910
そして、スカートコライダーを

184
00:12:03,916 --> 00:12:07,330
向かい合っているボーンに応じて

185
00:12:07,333 --> 00:12:11,010
適切に割り当てて、その角度のセットとのみ相互作用するようにします。

186
00:12:11,016 --> 00:12:13,430
スカートコライダーはまだ何も変更していませんが、

187
00:12:13,433 --> 00:12:16,380
脚の方は変更しました。

188
00:12:16,383 --> 00:12:17,780
少し膨らんでいるのが見えます。

189
00:12:17,783 --> 00:12:24,130
それは上部にもコライダーを設置したためです。

190
00:12:24,133 --> 00:12:26,810
そのため、少し偶発的な相互作用が起きてしまいました。

191
00:12:26,816 --> 00:12:29,860
ご覧の通りです。

192
00:12:29,866 --> 00:12:30,830
見えましたか？

193
00:12:30,833 --> 00:12:32,560
少し触れてしまいました。

194
00:12:32,566 --> 00:12:34,310
それはしない方が良かったですね。

195
00:12:34,316 --> 00:12:37,290
さて、脚を上げてみましょう。

196
00:12:37,899 --> 00:12:42,110
まだ少し暴れているのが分かります。

197
00:12:42,116 --> 00:12:44,180
それは上の列があるからです。

198
00:12:44,183 --> 00:12:48,030
上の列を削除すると、このようになります。

199
00:12:48,033 --> 00:12:50,960
よし、上部の列のほとんどを削除しました。

200
00:12:50,966 --> 00:12:55,130
これで、その側面では膨らみがなくなりました。

201
00:12:55,133 --> 00:12:58,040
では、脚を上げてみましょう。

202
00:12:58,049 --> 00:13:04,160
見てのとおり、スカートが脚にフィットしているのが分かります。

203
00:13:04,716 --> 00:13:06,580
これが私が言うボウル法です。

204
00:13:06,583 --> 00:13:09,600
このように、両サイドがこちらにフィットして、

205
00:13:09,600 --> 00:13:12,980
直線的に保持されているのが分かります。

206
00:13:12,983 --> 00:13:17,380
このように横に動かすと、

207
00:13:18,266 --> 00:13:19,710
すこし貫通してしまうかもしれません。

208
00:13:19,716 --> 00:13:23,460
これは主に、見ての通り、

209
00:13:23,466 --> 00:13:28,890
開始線がまだ...

210
00:13:28,890 --> 00:13:32,480
この脚の列が

211
00:13:32,483 --> 00:13:35,500
押し出されすぎてしまっているということです。

212
00:13:35,500 --> 00:13:39,610
でも少なくとも私が言いたかったことと、

213
00:13:39,616 --> 00:13:42,830
Twitterスレッドで説明されていることの要点は理解できると思います。

214
00:13:42,833 --> 00:13:48,000
ただ、Twitterスレッドの方が私の説明よりもずっと分かりやすいと思います。

215
00:13:48,000 --> 00:13:49,350
私の説明が十分だと思うかどうか、

216
00:13:49,350 --> 00:13:52,210
コメント欄で教えてください。

217
00:13:52,216 --> 00:13:54,510
ボウル法を改善して、

218
00:13:54,516 --> 00:14:01,110
より小さなコライダーを複数列で配置してみてください。

219
00:14:01,116 --> 00:14:08,010
そうすることで、スカートの動きがより正確になります。

220
00:14:08,016 --> 00:14:13,210
とはいえ、これが現状での適切な解決方法なのです。

221
00:14:13,216 --> 00:14:17,060
正直に言うと、これは本当に残念な状況です。

222
00:14:17,066 --> 00:14:22,110
しかし、VRoidは当初の目的のために

223
00:14:22,116 --> 00:14:24,810
かなり制限的なフォーマットなので、

224
00:14:24,816 --> 00:14:27,980
今のところ他に方法がありません。

225
00:14:27,983 --> 00:14:31,310
ただし、これを自動化するツールも存在します。

226
00:14:31,316 --> 00:14:33,680
例えば、Fuji Sunflowerさんのこのツールです。

227
00:14:33,683 --> 00:14:37,610
では、Fuji Sunflowerさんのツールをデモンストレーションしていきます。

228
00:14:37,616 --> 00:14:40,380
これもTwitterスレッドで見ることができます。

229
00:14:40,383 --> 00:14:45,130
このTwitterスレッドのおかげで、実際に試してみることにしました。

230
00:14:45,133 --> 00:14:46,980
自分のケースに合うかどうか確認するためです。

231
00:14:46,983 --> 00:14:51,630
使用する際は、使用しているVRMのバージョンを確認してください。

232
00:14:51,633 --> 00:14:55,660
例えば、モデルがVRMバージョン0の場合、

233
00:14:55,666 --> 00:15:00,410
Auto VRMColliderGroupという、名前にGroupが付いているものを使用してください。

234
00:15:00,416 --> 00:15:03,140
Fuji Sunflowerさんは2つのファイルを提供しています。

235
00:15:03,149 --> 00:15:06,512
AutoVRMColliderとAuto VRMColliderGroupです。

236
00:15:06,512 --> 00:15:08,730
「Group」が付いているのはバージョン0用で、

237
00:15:08,733 --> 00:15:11,040
「Group」が付いていないのはバージョン1用です。

238
00:15:11,049 --> 00:15:13,290
Fuji Sunflowerのパッケージをインストールしたら、

239
00:15:13,299 --> 00:15:19,480
Auto VRMColliderGroupという項目がある上部に移動します。

240
00:15:19,483 --> 00:15:20,730
では試してみましょう。

241
00:15:20,733 --> 00:15:26,310
英語を使用する場合は、English オプションを選択してください。

242
00:15:26,316 --> 00:15:30,860
ここで調整可能な多くの設定が表示されます。

243
00:15:30,866 --> 00:15:33,580
例えば、半径の大きさや、

244
00:15:33,583 --> 00:15:37,010
セクションごとのコライダーの数を設定できます。

245
00:15:37,016 --> 00:15:39,280
プリセットも用意されています。

246
00:15:39,283 --> 00:15:42,950
例えば、半径はデフォルトの1がいいですか？

247
00:15:42,950 --> 00:15:46,450
それとも2倍にしますか？

248
00:15:46,450 --> 00:15:50,110
指に個別のコライダーが必要ですか？

249
00:15:50,116 --> 00:15:56,938
そして、コライダーを右、中央、左、追加のどこに配置しますか？

250
00:15:56,938 --> 00:16:00,530
録画中に、これらの調整の意味が分かりました。

251
00:16:00,533 --> 00:16:03,880
これらは単にパーツの位置を示すカテゴリーです。

252
00:16:03,883 --> 00:16:07,540
例えば、左は左腕、左指、左脚用で、

253
00:16:07,549 --> 00:16:09,510
右は対応する部分用です。

254
00:16:09,516 --> 00:16:12,530
そして中央は主に体の中心部用です。

255
00:16:12,533 --> 00:16:14,498
申し訳ありません。

256
00:16:14,498 --> 00:16:17,178
間違えてしまいました。

257
00:16:17,178 --> 00:16:19,997
では通常の説明に戻ります。

258
00:16:19,997 --> 00:16:24,410
ただし、私のような素人の視点から説明していきます。

259
00:16:24,416 --> 00:16:26,830
素人の私の視点からすると、

260
00:16:26,833 --> 00:16:31,430
まずは既存のコライダーをすべて消去します。

261
00:16:31,433 --> 00:16:33,450
これで脚にコライダーがない状態になりました。

262
00:16:33,450 --> 00:16:36,080
そして自動で追加します。

263
00:16:36,083 --> 00:16:39,640
プラグインが使用するプリセットコライダーが設定されます。

264
00:16:39,649 --> 00:16:43,260
正直、まあまあ良さそうです。

265
00:16:43,266 --> 00:16:47,010
ただし、少し大きすぎるかもしれません。

266
00:16:47,016 --> 00:16:49,480
このようにプリセットで調整できます。

267
00:16:49,483 --> 00:16:50,960
そして自動追加します。

268
00:16:50,966 --> 00:16:54,980
ただし、50%は正直少し小さすぎます。

269
00:16:54,983 --> 00:16:57,330
なので100%に戻します。

270
00:16:57,333 --> 00:16:59,710
脚を確認してみましょう。

271
00:16:59,716 --> 00:17:01,790
太もものサイズはぴったりですが、

272
00:17:01,799 --> 00:17:05,200
下腿部は少し大きめです。

273
00:17:05,200 --> 00:17:09,930
Fuji Sunflowerさんがどういう基準で作られたのかはよく分かりません。

274
00:17:10,933 --> 00:17:11,730
まあ、そういうことです。

275
00:17:11,733 --> 00:17:15,730
下にスクロールすると、スカート用の修正ボタンがあります。

276
00:17:15,733 --> 00:17:20,580
これで中央に追加のコライダーがいくつか追加されます。

277
00:17:20,583 --> 00:17:25,030
ある意味プレイ法のような働きをします。

278
00:17:25,033 --> 00:17:29,560
では再生して脚を上げてみましょう。

279
00:17:33,783 --> 00:17:36,910
横に飛んでしまったようです。

280
00:17:37,833 --> 00:17:43,207
これは中央にのみフォーカスしているプレイ法だからです。

281
00:17:43,207 --> 00:17:51,460
これが、プレイ法にまだ欠陥があると説明した理由です。

282
00:17:51,466 --> 00:17:55,592
開始点が太ももの上にあっても、

283
00:17:55,592 --> 00:18:00,960
チェーン下の他のボーンは必ず横に飛んでしまいます。

284
00:18:00,966 --> 00:18:06,160
なので、これは座っているような場合に最適です。

285
00:18:06,166 --> 00:18:09,680
この脚を上げると、それに従います。

286
00:18:09,683 --> 00:18:11,430
そして中央でフィットします。

287
00:18:11,433 --> 00:18:19,080
ただし、見て分かる通り、横方向のボーンを持つスカートにも機能します。

288
00:18:19,083 --> 00:18:21,460
ご覧の通り、一つが横に飛びました。

289
00:18:21,466 --> 00:18:24,090
あまり良くありませんね。

290
00:18:24,099 --> 00:18:25,630
やれやれ。

291
00:18:25,633 --> 00:18:28,710
だからこそ私はボウル法を推奨しています。

292
00:18:28,716 --> 00:18:31,360
ただ、ボウル法を使用している人はまだ見たことがありません。

293
00:18:31,366 --> 00:18:34,680
このプラグインの効果は人によって異なるでしょう。

294
00:18:34,683 --> 00:18:40,310
太ももを調整したら、左右に一つずつ延長します。

295
00:18:40,316 --> 00:18:44,110
そして後ろにも追加できればと思います。

296
00:18:44,116 --> 00:18:49,860
これで先ほど私がやったのと似た疑似ボウル法が作成されます。

297
00:18:49,866 --> 00:18:53,410
見ての通り、ボウル法はある程度機能しています。

298
00:18:53,416 --> 00:18:57,780
ただし、自動生成された太ももコライダーが

299
00:18:57,783 --> 00:19:02,710
少し大きめなので、中心でキャプチャされていません。

300
00:19:02,716 --> 00:19:05,210
でもある程度は機能しています。

301
00:19:05,216 --> 00:19:10,900
ただし、上部太もも領域のコライダーが大きすぎる場合、

302
00:19:10,900 --> 00:19:13,830
スカートのこの部分が膨らんでしまう可能性があります。

303
00:19:13,833 --> 00:19:16,900
繰り返しになりますが、効果は人によって異なります。

304
00:19:16,900 --> 00:19:20,730
ただし、スプリングボーン修正ボタンを押すと、

305
00:19:21,166 --> 00:19:27,980
ボーンをできるだけ大きく拡張し、

306
00:19:27,983 --> 00:19:32,730
互いにほとんど触れ合うまで広げて、

307
00:19:32,733 --> 00:19:36,200
ボーンの完全なカバレッジを確保します。

308
00:19:36,200 --> 00:19:38,590
ただし、あまりお勧めしません。

309
00:19:38,599 --> 00:19:41,760
少し大きすぎるからです。

310
00:19:41,766 --> 00:19:44,760
同じことをするこちらのオプションもあります。

311
00:19:44,766 --> 00:19:46,900
プロジェクトをクリーンアップして、

312
00:19:46,900 --> 00:19:51,000
NALULUNAのVRM SpringBoneToolとVRM SkirtToolをインポートしました。

313
00:19:51,000 --> 00:19:55,010
このツールでスカートの問題を修正したい場合、

314
00:19:55,016 --> 00:19:57,980
両方のツールをプロジェクトにインポートする必要があります。

315
00:19:57,983 --> 00:20:01,410
VRM toolsという新しいタブができます。

316
00:20:01,416 --> 00:20:04,930
SpringBoneTool、SkirtTool、クリーンアップツールの3つのセクションがあります。

317
00:20:04,933 --> 00:20:07,400
クリーンアップツールは何をするのでしょうか？

318
00:20:07,400 --> 00:20:10,040
基本的に、残されたものを処理します。

319
00:20:10,049 --> 00:20:14,730
例えば、以前言ったように、

320
00:20:14,733 --> 00:20:19,730
子オブジェクトが作成されたが、

321
00:20:19,733 --> 00:20:23,650
使用されずに残されている場合などです。

322
00:20:23,650 --> 00:20:26,380
例えば、すべてのコライダーを削除した場合、

323
00:20:26,383 --> 00:20:29,090
このツールがすべてをクリーンアップします。

324
00:20:29,099 --> 00:20:31,150
今は最初から始めるので、

325
00:20:31,150 --> 00:20:33,160
SpringBoneToolに焦点を当てていきます。

326
00:20:33,166 --> 00:20:34,530
まずはそこから始めて、

327
00:20:34,533 --> 00:20:36,750
それから、

328
00:20:36,750 --> 00:20:40,450
プロジェクト内のモデルを自動検出させます。

329
00:20:40,450 --> 00:20:43,360
まずプレハブを解凍する必要があります。

330
00:20:43,366 --> 00:20:45,110
そのボタンを押して、

331
00:20:45,116 --> 00:20:48,230
すべてを自動検出させます。

332
00:20:48,233 --> 00:20:52,910
コライダーが必要なボーンがすべて検出されます。

333
00:20:52,916 --> 00:20:55,130
そしてページ下部に、

334
00:20:55,133 --> 00:20:58,680
最適設定の読み込みと極端な設定の読み込みがあります。

335
00:20:58,683 --> 00:21:01,560
少し上にスクロールすると、見落としていましたが、

336
00:21:01,566 --> 00:21:04,810
必要なすべてのコライダーを設定できる

337
00:21:04,816 --> 00:21:07,110
パラメータがあることがわかります。

338
00:21:07,116 --> 00:21:11,830
上胸部や胴体用のパラメータです。これは2in1パックなので、

339
00:21:11,833 --> 00:21:16,500
頭部や髪の毛に関連するコライダーも処理できます。

340
00:21:16,500 --> 00:21:19,200
例えば、

341
00:21:19,200 --> 00:21:22,680
体の周りで髪の毛に問題がある場合、

342
00:21:22,683 --> 00:21:24,810
それらも処理できます。

343
00:21:24,816 --> 00:21:28,160
では下半身に焦点を当てましょう。

344
00:21:28,166 --> 00:21:30,030
パラメータを調整できますが、

345
00:21:30,033 --> 00:21:32,200
今はデフォルトのままにしておきます。

346
00:21:32,200 --> 00:21:35,952
前述の通り、私は素人なので。

347
00:21:35,952 --> 00:21:38,680
最適設定の読み込みをクリックします。

348
00:21:38,683 --> 00:21:44,790
このモデルに適したデフォルトパラメータが設定されます。

349
00:21:44,799 --> 00:21:48,730
そしてこのようにスプリングボーンを作成します。

350
00:21:48,733 --> 00:21:53,280
大量のコライダーとボーンが作成されているのがわかります。

351
00:21:53,283 --> 00:21:55,080
すべて問題なさそうです。

352
00:21:55,083 --> 00:21:58,580
少し試してみることができます。

353
00:21:58,583 --> 00:21:59,860
まだ完了ではありませんが。

354
00:21:59,866 --> 00:22:03,080
どういう状況か理解するために試してみましょう。

355
00:22:03,083 --> 00:22:07,310
明らかに分かる通り、コライダーはまだどの方式にも従っていません。

356
00:22:07,316 --> 00:22:09,710
ボウル法でもプレーン法でもありません。

357
00:22:09,716 --> 00:22:10,480
何もありません。

358
00:22:10,483 --> 00:22:11,540
全くありません。

359
00:22:11,549 --> 00:22:16,450
つまり、脚を上げると、

360
00:22:17,116 --> 00:22:18,210
滑り落ちてしまいます。

361
00:22:18,216 --> 00:22:24,730
ただし、このプラグインでは、どのボーンが影響を受けているかが分かります。

362
00:22:24,733 --> 00:22:29,630
モデルをクリックして確認する必要はありません。

363
00:22:29,633 --> 00:22:34,410
このプラグインではリアルタイムで確認できて、とても便利です。

364
00:22:34,416 --> 00:22:38,680
点滅して見えるのがすごくクールです。

365
00:22:38,683 --> 00:22:41,010
そして再生モードでは、

366
00:22:41,016 --> 00:22:43,280
このプラグインウィンドウが自動的に

367
00:22:43,283 --> 00:22:45,830
オートポーザーのような機能に切り替わります。

368
00:22:45,833 --> 00:22:51,460
歩行などのテストができるように自動でポーズを取ります。

369
00:22:52,133 --> 00:22:56,660
自動で歩いて結果を確認できます。

370
00:22:57,766 --> 00:23:00,030
走らせることもできます。

371
00:23:00,033 --> 00:23:03,290
ダンスもさせることができます。

372
00:23:03,299 --> 00:23:08,790
ボーンが正しく動作しているか確認できます。

373
00:23:08,799 --> 00:23:13,260
最初の2つは主に上半身に重点を置いています。

374
00:23:13,266 --> 00:23:17,310
見たところ、うまく動作しているようです。

375
00:23:17,316 --> 00:23:20,230
ここまでにしておきましょう。

376
00:23:20,233 --> 00:23:23,080
停止して、次に進みましょう。

377
00:23:23,083 --> 00:23:26,310
基本的なスプリングボーンが完了したので、

378
00:23:26,316 --> 00:23:29,380
次のツール、SkirtToolに移ります。

379
00:23:29,383 --> 00:23:32,160
再度モデルを自動検出させて、

380
00:23:32,166 --> 00:23:34,930
スカートのルートボーンを自動検出します。

381
00:23:34,933 --> 00:23:36,680
私のような状況で、

382
00:23:36,683 --> 00:23:40,040
SkirtToolがスカートのボーンを見つけられない場合、

383
00:23:40,049 --> 00:23:44,530
それは特定の名前を期待しているのに見つからないからです。

384
00:23:44,533 --> 00:23:46,610
その場合は自分で探す必要があります。

385
00:23:46,616 --> 00:23:50,080
私の場合、モデルをリグした時、脊椎に配置しました。

386
00:23:50,083 --> 00:23:52,900
ボーンの配置という観点から、

387
00:23:52,900 --> 00:23:55,910
股関節よりも脊椎の方が適していると考えたからです。

388
00:23:55,916 --> 00:23:57,410
そこに配置しました。

389
00:23:57,416 --> 00:24:00,760
そのため、このようにすべてを移動する必要があります。

390
00:24:00,766 --> 00:24:03,090
ドラッグして入れます。

391
00:24:03,099 --> 00:24:04,160
ポン。

392
00:24:04,166 --> 00:24:08,160
ここに見える緑の点のように、すべてのスカートボーンが揃いました。

393
00:24:08,166 --> 00:24:09,630
正しく検出されました。

394
00:24:09,633 --> 00:24:10,810
では下にスクロールして、

395
00:24:10,816 --> 00:24:13,980
推奨設定が3つあります。

396
00:24:13,983 --> 00:24:16,160
これら3つの推奨設定は、

397
00:24:16,166 --> 00:24:20,760
コライダーの動作をどのように設定するかを決定するものです。

398
00:24:20,766 --> 00:24:25,530
ダウンロードセクションにドキュメントが含まれていて、

399
00:24:25,533 --> 00:24:27,400
Google Docsにリンクされています。

400
00:24:27,400 --> 00:24:29,510
ただし、主に日本語です。

401
00:24:29,516 --> 00:24:34,180
提供された英語のドキュメントは、Google翻訳のような感じでした。

402
00:24:34,183 --> 00:24:38,860
なので、私の理解した解釈で、できる限り説明してみようと思います。

403
00:24:38,866 --> 00:24:46,330
最初の設定では、サイズは巨大になりますが、相互作用はかなり控えめです。

404
00:24:46,333 --> 00:24:52,180
つまり、サイズが大きいにもかかわらず、柔らかく押すような動きをします。

405
00:24:52,183 --> 00:24:56,880
再生すると、横が少し膨らむかもしれませんが、それは大丈夫です。

406
00:24:56,883 --> 00:25:01,250
それは私がスカートを誤ってリグしてしまった方法によるものです。

407
00:25:01,250 --> 00:25:06,730
足を上げると、適切に相互作用しているのが分かります。

408
00:25:06,733 --> 00:25:09,330
ある程度、ほぼ適切に動作していると言えます。

409
00:25:09,333 --> 00:25:11,750
そして足を少し外側に動かすことができます。

410
00:25:11,750 --> 00:25:15,840
スカートのリグの仕方が原因で、少し貫通してしまうかもしれません。

411
00:25:15,849 --> 00:25:20,750
残念ながら、角のリグを作っていれば、それに応じて相互作用したはずです。

412
00:25:20,750 --> 00:25:25,030
スカートのリグが正確であればあるほど、より良い結果が得られます。

413
00:25:25,033 --> 00:25:28,010
しかし、すべて正しく動作しています。

414
00:25:28,016 --> 00:25:32,560
以前のボウル方式のように密着するのではなく、上下に動いています。

415
00:25:32,566 --> 00:25:34,810
それが興味深い点の一つです。

416
00:25:34,816 --> 00:25:42,880
歩行や走行の動作をさせると、手の部分で問題が発生するかもしれません。

417
00:25:42,883 --> 00:25:46,060
主にスカートが上部から膨らんでいるためです。

418
00:25:46,066 --> 00:25:51,510
でも、後でスカートのパラメータを調整することで解決できるはずです。

419
00:25:51,516 --> 00:25:55,500
例えば、ダンスモードにすると、

420
00:25:56,916 --> 00:26:02,930
足との相互作用が実際に機能しているように見えます。

421
00:26:02,933 --> 00:26:04,110
ほぼね。

422
00:26:04,116 --> 00:26:06,880
ほぼと言ったのは、文字通りほぼという意味です。

423
00:26:06,883 --> 00:26:08,830
でもかなり印象的です。

424
00:26:08,833 --> 00:26:12,510
私自身の実装よりもはるかに優れています。

425
00:26:12,516 --> 00:26:15,610
前のツールでも言ったように、

426
00:26:15,616 --> 00:26:20,210
結果は状況によって異なりますが、このツールは明らかに優れていると思います。

427
00:26:20,216 --> 00:26:23,310
さて、プレイモードを終了して、二つ目の設定を試してみましょう。

428
00:26:23,316 --> 00:26:28,360
二つ目の設定で、まずすべてのコライダーを削除して、

429
00:26:28,366 --> 00:26:31,790
二つ目の設定を適用してスカートコライダーを作成すると、

430
00:26:31,799 --> 00:26:40,110
ある程度、奇妙な角度の平面のような方法になります。

431
00:26:40,116 --> 00:26:42,700
平面的なボウル方式というか。

432
00:26:42,700 --> 00:26:45,610
線を見ると、そんな感じに見えますね。

433
00:26:45,616 --> 00:26:50,310
再生すると、今回はスカートの上部が膨らみませんでした。

434
00:26:50,316 --> 00:26:53,930
これが私の状況に合っているようです。

435
00:26:53,933 --> 00:26:59,262
足を上げると、正しく広がっているのが分かります。

436
00:26:59,262 --> 00:27:04,790
例えば、足を横に動かすと、少し貫通するかもしれませんが、

437
00:27:04,799 --> 00:27:09,480
それはこれらのボーンが誤ってこれらと相互作用しているためです。

438
00:27:09,900 --> 00:27:14,340
また、非常に不自然な角度で足を上げているためでもあります。

439
00:27:14,349 --> 00:27:17,959
でも自然な角度でやると、

440
00:27:17,959 --> 00:27:21,330
このように動かすとこんな感じになります。

441
00:27:21,333 --> 00:27:24,250
これも私のスカートのリグの仕方が原因です。

442
00:27:24,250 --> 00:27:27,710
では、ポーズをリセットして歩行と走行をさせてみましょう。

443
00:27:27,716 --> 00:27:30,610
見て分かるように、歩行時はかなり良好です。

444
00:27:30,616 --> 00:27:33,360
歩くと手がスカートを押しています。

445
00:27:33,366 --> 00:27:36,380
走る時も適切に相互作用しています。

446
00:27:36,383 --> 00:27:40,910
あそこで少し貫通が見られますが、それほど悪くありません。

447
00:27:40,916 --> 00:27:43,500
そして、ダンスをさせると、

448
00:27:47,966 --> 00:27:50,560
かなり良い感じです。

449
00:27:51,566 --> 00:27:54,750
もっと極端な動きをさせて、どうなるか見てみましょう。

450
00:27:54,750 --> 00:27:59,710
正直、これが私が与えられる最高の評価ですが、

451
00:27:59,716 --> 00:28:02,090
この特定の二つ、

452
00:28:02,099 --> 00:28:05,530
この二つのセットは間違いなく価値があります。

453
00:28:05,533 --> 00:28:08,180
さて、プレイモードを終了して、三つ目の方法を試してみましょう。

454
00:28:08,183 --> 00:28:12,530
まだ三つ目の方法は試していませんが、どうにか試してみたいと思います。

455
00:28:12,533 --> 00:28:18,090
なるほど、二番目の方法の複数列という感じですね。

456
00:28:18,099 --> 00:28:22,710
では、オンにしてどうなるか見てみましょう。

457
00:28:23,400 --> 00:28:27,580
上部が少し膨らんでいますが、そこまで悪くありません。

458
00:28:27,583 --> 00:28:29,160
歩行はどうでしょう？

459
00:28:29,166 --> 00:28:32,910
プリセット1と同じ結果になりましたね。

460
00:28:32,916 --> 00:28:37,200
1と2を組み合わせたような感じで、1は多くの列があり、

461
00:28:37,200 --> 00:28:40,880
2はコライダーサイズが小さいと思われます。

462
00:28:40,883 --> 00:28:42,900
走らせるとどうなるでしょうか？

463
00:28:42,900 --> 00:28:44,330
悪くないですね。

464
00:28:44,333 --> 00:28:48,580
Tポーズに戻って、足を上げてみましょう。

465
00:28:50,333 --> 00:28:55,200
ここの後ろのコライダーのせいで、少し膨らんでいますね。

466
00:28:55,200 --> 00:28:59,480
3つの異なるコライダー設定がある理由は、そのためです。

467
00:28:59,483 --> 00:29:03,730
異なるリグは大きく異なるシナリオを持つかもしれません。

468
00:29:03,733 --> 00:29:07,710
そのため、3つのうちいずれかがあなたのケースに合うでしょう。

469
00:29:07,716 --> 00:29:11,710
私の場合は、二番目の設定が適していますね。

470
00:29:11,716 --> 00:29:16,760
では、ダンスをさせて、それでも良く見えるか確認してみましょう。

471
00:29:16,766 --> 00:29:19,540
足を上げた時にすでにあまり良くないことは分かっていますが、

472
00:29:19,549 --> 00:29:25,090
少なくともどんな感じか短く見てみる価値はあります。

473
00:29:25,099 --> 00:29:27,450
まあ、実際それほど悪くないですが、

474
00:29:27,450 --> 00:29:30,280
まだ少し不自然な動きが見られます。

475
00:29:30,283 --> 00:29:33,250
でも、それ以上のことはできません。

476
00:29:33,250 --> 00:29:35,290
VRMが提供してくれているもので作業するしかありません。

477
00:29:35,299 --> 00:29:38,860
私の場合は、コライダーをクリアして

478
00:29:38,866 --> 00:29:40,630
二番目の設定を使用する必要があります。

479
00:29:40,633 --> 00:29:44,280
つまり、私には二番目の設定が適しているということです。

480
00:29:44,283 --> 00:29:45,660
以上です！

481
00:29:45,666 --> 00:29:47,430
スカートの問題の解決法でした！

482
00:29:47,433 --> 00:29:48,610
これがお役に立てば幸いです。

483
00:29:48,616 --> 00:29:51,160
役立った場合は、いいねと購読をお願いします。

484
00:29:51,166 --> 00:29:54,310
技術系の動画やストリームのハイライト、ゲーム動画も配信しています。

485
00:29:54,316 --> 00:29:55,980
経済的なサポートをしていただける場合は、

486
00:29:55,983 --> 00:29:57,980
ThroneとKo-fiをチェックしてください。

487
00:29:57,983 --> 00:30:00,880
PayPalよりもStripeを使用していただけると、このような動画を作り続けることができます。

488
00:30:00,883 --> 00:30:06,630
それでは、最大のスポンサーに特別な感謝を申し上げます！

489
00:30:18,383 --> 00:30:20,210
もっとスペースが必要ですか？

490
00:30:20,216 --> 00:30:22,260
SD Maid SEがお手伝いします！

491
00:30:22,266 --> 00:30:26,610
SD Maid SEは、Darkenという個人開発者が作成したジャンククリーナーです。

492
00:30:26,616 --> 00:30:30,250
アプリによっては、使用後に不要なファイルが残ることがあります。

493
00:30:30,250 --> 00:30:32,730
そんな時にSD Maid SEが役立ちます！

494
00:30:32,733 --> 00:30:35,280
手動でもできますが、時は金なり！

495
00:30:35,283 --> 00:30:38,290
SD Maid SEを使えば、その多くを自動化でき、

496
00:30:38,299 --> 00:30:41,480
本当に大切なことに貴重な時間を使うことができます。

497
00:30:41,483 --> 00:30:43,010
他のシステムジャンククリーナーと違い、

498
00:30:43,016 --> 00:30:46,980
SD Maid SEは個人を特定できる情報を一切収集せず、

499
00:30:46,983 --> 00:30:50,260
悪質なデータマイナーに売られることもありません。

500
00:30:50,266 --> 00:30:53,560
また、時間を無駄にする大量の広告で邪魔されることもありません。

501
00:30:53,566 --> 00:30:55,330
先ほど言ったように、時は金なりです！

502
00:30:55,333 --> 00:30:59,960
SD Maid SEは、存続と発展のためにコミュニティの寛大さに大きく依存しています。

503
00:30:59,966 --> 00:31:02,130
アプリの改善は、GitHubとDiscordの

504
00:31:02,133 --> 00:31:04,830
素晴らしいコミュニティの助けと貢献によって行われています。

505
00:31:04,833 --> 00:31:08,410
アプリに問題があっても、あなたは決して一人ではありません！

506
00:31:08,416 --> 00:31:09,260
何を待っているんですか？

507
00:31:09,266 --> 00:31:14,580
下記の説明欄にあるGoogle Play StoreかGitHubでSD Maid SEを入手して、スマートフォンをクリーンにしましょう。

508
00:31:14,583 --> 00:31:16,790
あ、私も画面を掃除した方がいいかもしれませんね。

509
00:31:16,799 --> 00:31:18,260
最後に、Darken Development に感謝します。

510
00:31:18,266 --> 00:31:20,450
コンテンツ制作への前進を励ましてくれて。

511
00:31:20,450 --> 00:31:22,810
また会いましょう！

