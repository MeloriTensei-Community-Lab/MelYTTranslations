1
00:00:10,183 --> 00:00:12,743
深夜了，

2
00:00:12,743 --> 00:00:17,850
万籁俱寂，只有电脑在运行。

3
00:00:22,649 --> 00:00:27,330
我想，现在是我开始处理模型的最佳时机。

4
00:00:35,816 --> 00:00:41,700
我坐下来，在 Unity 中打开了正在更新模型的项目。

5
00:00:45,083 --> 00:00:49,560
如你所知，头发和裙子都包含物理效果，

6
00:00:49,566 --> 00:00:53,510
模型绑定师总是需要确保它们按照预期运作。

7
00:00:53,516 --> 00:00:57,330
所以那天，我计划着手改进这些。

8
00:00:57,333 --> 00:00:59,680
因此，我进行了一系列检查，

9
00:00:59,683 --> 00:01:03,700
通过进入播放模式，并移动我的身体部位。

10
00:01:03,700 --> 00:01:05,910
头发看起来不错，

11
00:01:06,433 --> 00:01:11,950
裙子看起来也很好，直到我抬起腿。

12
00:01:17,583 --> 00:01:23,290
我认为这只是一次性的，所以我想用两条腿都检查一下。

13
00:01:36,066 --> 00:01:38,780
裙子在飘动。

14
00:01:38,783 --> 00:01:40,660
我就是在这里开始感到困惑。

15
00:01:40,666 --> 00:01:43,040
因此我转向了 Google。

16
00:01:43,049 --> 00:01:46,630
令人沮丧的是，没有关于它的明确信息，

17
00:01:46,633 --> 00:01:49,610
我花费了数周的研究，

18
00:01:49,616 --> 00:01:54,200
直到我在一个只有日语的推特线程中偶然发现了它。

19
00:01:54,200 --> 00:01:57,710
它解释了我需要了解的一切。

20
00:01:58,033 --> 00:02:02,830
我找不到任何有用的文章

21
00:02:02,833 --> 00:02:06,290
关于 VRM 弹簧骨骼的裙子碰撞措施，

22
00:02:06,299 --> 00:02:10,960
所以我想要用自己的方式总结一下我迄今为止的发现。

23
00:02:10,966 --> 00:02:15,690
VRM 弹簧骨骼与动态骨骼的比较：

24
00:02:15,699 --> 00:02:18,150
- 骨骼运动的方向不会固定/恒定。

25
00:02:18,150 --> 00:02:21,410
半径的大小不能单独更改

26
00:02:21,416 --> 00:02:25,650
(The size within the same size group is always constant).

27
00:02:25,650 --> 00:02:30,590
但是，由于目前没有办法

28
00:02:30,599 --> 00:02:32,580
大规模解决这些问题。

29
00:02:32,583 --> 00:02:37,110
我选择“蛮力”的方式来找出答案。

30
00:02:37,116 --> 00:02:39,580
然而，对于上述几点，

31
00:02:39,583 --> 00:02:43,550
如果碰撞器只是沿着腿部的网格形状放置，

32
00:02:43,550 --> 00:02:46,250
半径 [裙子的] 将会溢出

33
00:02:46,250 --> 00:02:48,060
沿着碰撞器的球形表面。

34
00:02:48,066 --> 00:02:51,780
so, let's add one more row (or more) colliders

35
00:02:51,783 --> 00:02:56,530
。这样，裙子 [碰撞] 半径将被“板”推出去，

36
00:02:56,533 --> 00:03:00,830
因此与仅仅使用“球体”相比，溢出量会更少。

37
00:03:00,833 --> 00:03:05,010
在这种情况下，每个碰撞器应该很小，

38
00:03:05,016 --> 00:03:09,060
通过将许多碰撞器排列成一行，可以提高精度。

39
00:03:09,066 --> 00:03:11,030
将碰撞器放置在“内部”的主要原因

40
00:03:11,033 --> 00:03:13,160
是如果将它们放置在外部，

41
00:03:13,166 --> 00:03:18,110
当您站立不动时，它们会干扰裙子。

42
00:03:18,116 --> 00:03:22,050
他们还在展台上展示了一种工具，可以自动完成整个流程，

43
00:03:22,050 --> 00:03:29,260
但我们稍后再谈。

44
00:03:29,266 --> 00:03:32,760
如果碰撞半径稍微过大，

45
00:03:32,766 --> 00:03:35,030
并且由于它与碰撞器的交互而稍微突出，

46
00:03:35,033 --> 00:03:37,900
通过调整重力值等设置，

47
00:03:37,900 --> 00:03:41,590
使行为更自然。

48
00:03:41,599 --> 00:03:45,110
adjust the settings by adjusting the Gravity value, etc.

49
00:03:45,116 --> 00:03:47,480
“专门用于站立人物”

50
00:03:47,483 --> 00:03:51,730
在 VRoid 等官方应用程序中查看时。

51
00:03:51,733 --> 00:03:53,940
然而，近年来，第三方应用程序

52
00:03:53,949 --> 00:03:56,190
相继出现，

53
00:03:56,199 --> 00:03:59,960
越来越多的情况下需要剧烈运动。

54
00:03:59,966 --> 00:04:01,560
我希望以我真诚的希望来结束这个帖子，即尽快采取重大行动。

55
00:04:01,566 --> 00:04:04,260
我们可能仍在研究中，

56
00:04:04,266 --> 00:04:05,810
where intense motion is needed.

57
00:04:05,816 --> 00:04:08,630
我们希望这能帮助到那些人。

58
00:04:08,633 --> 00:04:13,090
现在，如果您不太理解，骨骼就是决定物体如何变形从 A 点到 B 点的点。

59
00:04:13,099 --> 00:04:15,690
而碰撞器决定了物体如何相互接触，

60
00:04:15,699 --> 00:04:20,440
而不是直接穿过。

61
00:04:20,449 --> 00:04:23,060
但在 VRM 的情况下，通常只有一个球体。

62
00:04:23,066 --> 00:04:27,434
这两个要素共同作用，为我们提供了物体相互接触的视觉表现。

63
00:04:27,434 --> 00:04:30,980
有了它，我检查了我的腿和裙子之间的碰撞器...

64
00:04:30,983 --> 00:04:33,130
呃…

65
00:04:33,133 --> 00:04:35,800
是啊…

66
00:04:35,800 --> 00:04:37,390
这需要解决。

67
00:04:37,399 --> 00:04:41,330
考虑到这是一个我的模型问题，

68
00:04:41,333 --> 00:04:44,980
With the two in play, becomes something that gives us the visual representation

69
00:04:44,983 --> 00:04:47,810
物体是否触碰了另一个物体。

70
00:04:47,816 --> 00:04:52,560
然后，我检查了腿部和裙子之间的碰撞器...

71
00:04:53,066 --> 00:04:54,660
嗯...

72
00:04:54,666 --> 00:04:56,010
是的...

73
00:04:56,016 --> 00:04:57,610
这必须解决。

74
00:04:57,616 --> 00:04:59,710
考虑到这是我的模型问题，

75
00:04:59,716 --> 00:05:02,360
以及其他在VRoid中制作模型的人，

76
00:05:02,366 --> 00:05:04,460
我们需要把它带到Blender中进行修复。

77
00:05:04,466 --> 00:05:06,430
现在，如果你不明白那是什么，

78
00:05:06,433 --> 00:05:09,680
骨骼的起始点太低，导致裙子无法在腿部以极端角度运动时正常运作，

79
00:05:09,683 --> 00:05:12,430
例如下蹲和坐着。

80
00:05:12,433 --> 00:05:14,580
为了修复裙子的绑定，我建议你查看Pierrick和Kana Fuyuko在Blender中制作的裙子绑定指南。

81
00:05:14,583 --> 00:05:17,080
简单来说，我将总结一下我在这里所做的操作。

82
00:05:17,083 --> 00:05:20,500
分离衣服，清理多余的顶点和骨骼，确保它们对称，如果你的模型有两层裙子，将顶点合并，创建新的骨骼组，绑定它们并进行权重绘制，将裙子重新连接到模型，测试它们，最后导出。

83
00:05:20,500 --> 00:05:23,410
现在我们完成了这部分，让我把这个交给LiveMel。

84
00:05:23,416 --> 00:05:26,980
谢谢你，VoiceOverMel！

85
00:05:26,983 --> 00:05:31,890
好的，我们已经导入了UniVRM包，

86
00:05:31,899 --> 00:05:35,260
我还导入了我的模型的两个不同版本，

87
00:05:35,266 --> 00:05:40,280
这样我就可以向你展示它实际上是如何产生差异的。

88
00:05:40,283 --> 00:05:43,560
好的，对于第一阶段，我们将错误地进行操作。

89
00:05:43,566 --> 00:05:44,880
所以我们没有重新绑定模型，

90
00:05:44,883 --> 00:05:49,380
这就是它的样子。

91
00:05:49,383 --> 00:05:52,580
所以现在我们把它放进去，你可以看到这条线从这里开始，而不是从这里开始，

92
00:05:52,583 --> 00:05:55,980
并且只有大腿区域有几个碰撞器，如你所见。

93
00:05:55,983 --> 00:05:58,750
如果我们按现在的状态进行操作，如果我们保持原样，并尝试编译它，

94
00:05:58,750 --> 00:06:01,160
我们将得到与我们在本视频开头所看到的结果完全相同的结果。

95
00:06:01,166 --> 00:06:02,850
所以我们向下移动到臀部，大腿，向上移动它，你可以看到它正在膨胀。

96
00:06:02,850 --> 00:06:09,580
好吧，为了解释发生的事情，这就是发生的事情。

97
00:06:09,583 --> 00:06:15,300
如果你仔细观察我们刚刚拉起来的这条腿的这个分支，

98
00:06:15,300 --> 00:06:20,780
你可以看到裙子的骨骼在它的下面，

99
00:06:20,783 --> 00:06:25,660
这意味着当我们旋转腿部时，裙子也会跟着动。

100
00:06:25,666 --> 00:06:34,830
好吧，从技术上来说，你可以问问自己，

101
00:06:34,833 --> 00:06:37,640
哦，天啊Mel，你为什么不能把这些东西拿起来扔到臀部呢？

102
00:06:37,649 --> 00:06:42,140
所以如果我们这样做，当我们把腿抬起来的时候，

103
00:06:42,149 --> 00:06:44,890
你可以看到裙子正在穿透。

104
00:06:44,899 --> 00:06:49,190
那是因为如果我们查看次级区域，

105
00:06:49,199 --> 00:06:51,060
也就是所有物体碰撞器所在的地方，

106
00:06:51,066 --> 00:06:55,680
你可以看到，如果我们只从正面看，

107
00:06:55,683 --> 00:06:59,530
骨骼完全穿透了它的碰撞器，

108
00:07:00,300 --> 00:07:02,980
然后碰撞器球几乎擦过它，

109
00:07:02,983 --> 00:07:04,890
如你所见，像这样，几乎擦过，非常小的差距。

110
00:07:04,899 --> 00:07:09,140
就像我们点击角色一样，你可以看到它几乎擦过它。

111
00:07:09,149 --> 00:07:14,582
你可能会问自己，我们可以直接增加这些球的大小。

112
00:07:14,582 --> 00:07:20,280
当然，我们可以。

113
00:07:20,283 --> 00:07:24,580
所以我们向上移动到裙子部分，然后像这样增加半径。

114
00:07:24,583 --> 00:07:29,460
但这会导致这种情况，这个东西会失控。

115
00:07:29,466 --> 00:07:34,180
那是因为起始点在下面，我的意思是，我不会说在下面，

116
00:07:34,183 --> 00:07:38,190
而是在大腿的位置。

117
00:07:38,199 --> 00:07:39,460
球就在大腿的外侧，

118
00:07:39,466 --> 00:07:48,100
所以它实际上与大腿并排互动。

119
00:07:48,100 --> 00:07:52,600
现在，无论我们怎么做，无论我们如何修复它，

120
00:07:52,600 --> 00:07:57,860
如果我们不重新绑定裙子，修复它就会非常非常困难。

121
00:07:57,866 --> 00:08:01,080
但我仍然会告诉你如何修复它。

122
00:08:01,083 --> 00:08:03,660
首先，我们将创建一个我称之为碗形方法的东西。

123
00:08:03,666 --> 00:08:09,610
因为如果你参考之前那条推特帖子，

124
00:08:09,616 --> 00:08:12,530
他们说用平面方法制作。

125
00:08:12,533 --> 00:08:16,210
在我看来，平面方法最终可能会滑得很远。

126
00:08:16,216 --> 00:08:18,780
所以我更喜欢碗形方法，这样我们可以像，

127
00:08:18,783 --> 00:08:24,310
如果你从上面看，

128
00:08:24,316 --> 00:08:27,880
一个碗状的形状，可以将裙子的骨骼固定在适当的位置。

129
00:08:27,883 --> 00:08:30,380
但这肯定意味着，如果你将大腿移到侧面，

130
00:08:30,383 --> 00:08:35,730
裙子也会跟着动。

131
00:08:35,733 --> 00:08:39,930
但说实话，这是弹簧骨骼的限制。

132
00:08:39,933 --> 00:08:42,140
所以我们只能做到这一步。

133
00:08:42,149 --> 00:08:46,830
然而，它仍然解决了部分问题。

134
00:08:46,833 --> 00:08:50,750
好的，让我们从一件事情开始。

135
00:08:50,750 --> 00:08:52,380
既然我们知道碰撞器的起始点更靠下，

136
00:08:52,383 --> 00:08:56,080
但是说实话，这就是弹簧骨骼的限制。

137
00:08:56,083 --> 00:08:58,410
所以这就是我们的极限了。

138
00:08:58,416 --> 00:09:02,060
然而，它仍然解决了一些问题。

139
00:09:02,066 --> 00:09:03,750
好，让我们从一件事情开始。

140
00:09:03,750 --> 00:09:07,530
既然我们知道碰撞器的起点更低，

141
00:09:07,533 --> 00:09:10,330
我们将把顶部的那些向下移。

142
00:09:10,333 --> 00:09:14,760
我们不需要那些，因为它们真的没有意义。

143
00:09:14,766 --> 00:09:18,197
我们把它移除就行了。

144
00:09:18,197 --> 00:09:25,680
然后，我们为第二个创建一个全新的，像这样。

145
00:09:25,683 --> 00:09:31,710
然后，我们会尝试尽可能地复制参数，像这样。

146
00:09:32,216 --> 00:09:38,880
然后，我们现在创建一个全新的，它会向侧面移动，就像，

147
00:09:38,883 --> 00:09:42,610
不是像那样，而是像这样。

148
00:09:43,233 --> 00:09:48,390
然后我们只需要把它向前移动一点，

149
00:09:48,399 --> 00:09:54,830
然后创建一个新的，它在那个碰撞器的另一侧。

150
00:09:54,833 --> 00:09:56,830
就像，有点像这样。

151
00:09:56,833 --> 00:09:59,560
就像，你可以理解这个概念。

152
00:09:59,566 --> 00:10:02,160
沿着那个概念做就行了。

153
00:10:02,166 --> 00:10:05,390
现在，再重复几次，增加几层。

154
00:10:05,399 --> 00:10:07,930
然后，在那之后，你进入二级。

155
00:10:07,933 --> 00:10:13,030
你要做的是进入二级，

156
00:10:13,033 --> 00:10:18,500
然后把腿分配到那些裙子碰撞器上。

157
00:10:18,500 --> 00:10:21,610
现在，这里又出现了另一个新问题。

158
00:10:21,616 --> 00:10:22,960
既然我们已经用腿做了，

159
00:10:22,966 --> 00:10:27,510
这意味着整个裙子会与那个螺栓发生交互。

160
00:10:27,516 --> 00:10:28,980
我们如何防止这种情况？

161
00:10:28,983 --> 00:10:29,880
很简单。

162
00:10:29,883 --> 00:10:36,290
你只需要右键单击腿，然后创建一个新的子物体。

163
00:10:36,299 --> 00:10:38,500
一个空的GameObject子物体。

164
00:10:38,500 --> 00:10:49,450
我们称它为，比如，ForSkirtFrontLeft。

165
00:10:49,916 --> 00:10:55,360
然后，而不是使用上腿弹簧骨骼碰撞器组，

166
00:10:55,366 --> 00:11:01,130
我们将这个东西移到这个东西上，

167
00:11:01,133 --> 00:11:07,930
然后我们将这些作为碰撞器组放到二级。

168
00:11:07,933 --> 00:11:10,140
然而，这可能是一项非常繁琐的任务，

169
00:11:10,149 --> 00:11:13,910
尤其是当你需要为每个角度做几行的时候，

170
00:11:13,916 --> 00:11:17,000
比如，前面、后面、左边和右边。

171
00:11:17,000 --> 00:11:19,580
所以，我不会在这个教程中做。

172
00:11:19,583 --> 00:11:23,560
但是，我已经为自己预先制作了一个。

173
00:11:24,750 --> 00:11:26,710
这是一个例子。

174
00:11:26,716 --> 00:11:29,180
所以，如果我们进入腿部，

175
00:11:29,183 --> 00:11:34,450
你就会看到，我已经创建了一个专门的部分，叫做上腿碰撞器。

176
00:11:34,450 --> 00:11:38,060
它们每个都有，比如，我们有中间的一个，

177
00:11:38,066 --> 00:11:40,390
然后我们有侧面的一些。

178
00:11:40,399 --> 00:11:44,290
前面，左边，前面。

179
00:11:44,299 --> 00:11:47,960
基本上，我已经涵盖了这么多。

180
00:11:47,966 --> 00:11:49,880
如果你把所有圆圈放在一起看，

181
00:11:49,883 --> 00:11:56,160
所以，1，2，3，4，5，6，7，有点像那样。

182
00:11:56,166 --> 00:11:57,600
这个角度。

183
00:11:57,600 --> 00:12:03,910
然后我们根据它所面向的骨骼，

184
00:12:03,916 --> 00:12:07,330
适当地把它分配到裙子的碰撞器上，

185
00:12:07,333 --> 00:12:11,010
这样它只与那个特定角度发生交互。

186
00:12:11,016 --> 00:12:13,430
所以我们还没有改变裙子碰撞器，

187
00:12:13,433 --> 00:12:16,380
但我们改变了腿部。

188
00:12:16,383 --> 00:12:17,780
你可以看到一点鼓起。

189
00:12:17,783 --> 00:12:24,130
那是因为我在上端也做了碰撞器。

190
00:12:24,133 --> 00:12:26,810
所以它可能不小心与它交互了一下。

191
00:12:26,816 --> 00:12:29,860
正如你所见，有点像这样。

192
00:12:29,866 --> 00:12:30,830
看到了吧？

193
00:12:30,833 --> 00:12:32,560
它碰了一下。

194
00:12:32,566 --> 00:12:34,310
我可能不应该那样做。

195
00:12:34,316 --> 00:12:37,290
好，让我们把腿抬起来。

196
00:12:37,899 --> 00:12:42,110
你可以看到，它还在乱动。

197
00:12:42,116 --> 00:12:44,180
那是因为我还有上面一排。

198
00:12:44,183 --> 00:12:48,030
如果我移除了上面一排，就像这样。

199
00:12:48,033 --> 00:12:50,960
好的，我们移除了大部分顶部，上面的几排。

200
00:12:50,966 --> 00:12:55,130
现在你可以看到，在那一侧，它不再鼓起来了。

201
00:12:55,133 --> 00:12:58,040
现在，让我们把腿抬起来。

202
00:12:58,049 --> 00:13:04,160
你可以看到，它有点抱住了。

203
00:13:04,716 --> 00:13:06,580
这就是我所说的碗形方法。

204
00:13:06,583 --> 00:13:09,600
所以你可以看到，这一侧和这一侧都抱住了这个，

205
00:13:09,600 --> 00:13:12,980
并且它沿直线移动。

206
00:13:12,983 --> 00:13:17,380
所以，当我们像这样把它移到侧面时，

207
00:13:18,266 --> 00:13:19,710
它可能会穿过去。

208
00:13:19,716 --> 00:13:23,460
主要是因为，正如你所见，

209
00:13:23,466 --> 00:13:28,890
the starting line is still...

210
00:13:28,890 --> 00:13:32,480
就说这排腿已经

211
00:13:32,483 --> 00:13:35,500
太远了，它已经被推出来了。

212
00:13:35,500 --> 00:13:39,610
但至少你能看到我意思的，

213
00:13:39,616 --> 00:13:42,830
以及推特帖子在说什么。

214
00:13:42,833 --> 00:13:48,000
但是，我确实认为推特帖子比我解释得更清楚。

215
00:13:48,000 --> 00:13:49,350
但请在下面的评论中告诉我，

216
00:13:49,350 --> 00:13:52,210
如果你认为我的解释足够清楚。

217
00:13:52,216 --> 00:13:54,510
尝试改进碗方法，

218
00:13:54,516 --> 00:14:01,110
并尝试使用更多行来使碰撞体略微变小。

219
00:14:01,116 --> 00:14:08,010
这样就能更加精确地模拟裙子的行为。

220
00:14:08,016 --> 00:14:13,210
除了这一点，这实际上才是解决问题的正确方法。

221
00:14:13,216 --> 00:14:17,060
说实话，在我看来，这真的很糟糕。

222
00:14:17,066 --> 00:14:22,110
但由于VRoid是一个相当有限的格式，

223
00:14:22,116 --> 00:14:24,810
主要是因为它的最初目的，

224
00:14:24,816 --> 00:14:27,980
我们现在对此无能为力。

225
00:14:27,983 --> 00:14:31,310
话虽如此，也存在自动执行此过程的自动化工具，

226
00:14:31,316 --> 00:14:33,680
比如来自富士向日葵的这款工具。

227
00:14:33,683 --> 00:14:37,610
好的，所以我要演示一下我在富士向日葵找到的这款工具。

228
00:14:37,616 --> 00:14:40,380
你也可以在推特帖子中看到。

229
00:14:40,383 --> 00:14:45,130
正是因为这个推特帖子，我才尝试了它，

230
00:14:45,133 --> 00:14:46,980
看看它是否适合我的情况。

231
00:14:46,983 --> 00:14:51,630
要使用它，确保你知道你正在使用的VRM版本。

232
00:14:51,633 --> 00:14:55,660
比如，如果你的模型是VRM版本0，

233
00:14:55,666 --> 00:15:00,410
请使用Auto VRMColliderGroup，带“Group”字样的那个。

234
00:15:00,416 --> 00:15:03,140
因为富士向日葵会提供两个文件，

235
00:15:03,149 --> 00:15:06,512
一个是名为AutoVRMCollider，另一个是Auto VRMColliderGroup。

236
00:15:06,512 --> 00:15:08,730
带“Group”的是版本0，

237
00:15:08,733 --> 00:15:11,040
不带“Group”的是版本1。

238
00:15:11,049 --> 00:15:13,290
安装了来自富士向日葵的软件包后，

239
00:15:13,299 --> 00:15:19,480
让我们在这里向上移动，这里只有名为Auto VRMColliderGroup的项目。

240
00:15:19,483 --> 00:15:20,730
所以让我们试试它。

241
00:15:20,733 --> 00:15:26,310
这里会有一个英语选项，如果你说英语，请点击它。

242
00:15:26,316 --> 00:15:30,860
在这里，你会看到很多可以调整的设置。

243
00:15:30,866 --> 00:15:33,580
例如，你想设置半径有多大，

244
00:15:33,583 --> 00:15:37,010
以及每段你想设置多少个碰撞体。

245
00:15:37,016 --> 00:15:39,280
你也可以为它设置预设。

246
00:15:39,283 --> 00:15:42,950
例如，半径，你想设置默认值为1吗？

247
00:15:42,950 --> 00:15:46,450
或者你想设置乘数为2吗？

248
00:15:46,450 --> 00:15:50,110
你想要为碰撞体设置单独的手指吗？

249
00:15:50,116 --> 00:15:56,938
你喜欢将碰撞体设置在右侧、中心、左侧，还是额外添加一些？

250
00:15:56,938 --> 00:16:00,530
好的，在我录制的时候，我刚弄明白这些调整到底做了什么。

251
00:16:00,533 --> 00:16:03,880
所以这些只是事物所在位置的类别。

252
00:16:03,883 --> 00:16:07,540
所以比如，左边是指左臂、左手指、左腿，

253
00:16:07,549 --> 00:16:09,510
右边是指相应的部位。

254
00:16:09,516 --> 00:16:12,530
中心主要指身体的中心。

255
00:16:12,533 --> 00:16:14,498
抱歉。

256
00:16:14,498 --> 00:16:17,178
请原谅我的错误。

257
00:16:17,178 --> 00:16:19,997
现在回到正规的编程。

258
00:16:19,997 --> 00:16:24,410
但是，我要从像我这样的笨蛋的角度来做这件事。

259
00:16:24,416 --> 00:16:26,830
但从我这个笨蛋的角度来看，

260
00:16:26,833 --> 00:16:31,430
我认为我要清除所有现有的碰撞体。

261
00:16:31,433 --> 00:16:33,450
所以现在腿上没有碰撞体了。

262
00:16:33,450 --> 00:16:36,080
然后我们自动添加它们。

263
00:16:36,083 --> 00:16:39,640
所以现在插件会使用一个预设的碰撞体。

264
00:16:39,649 --> 00:16:43,260
说实话，看起来还可以。

265
00:16:43,266 --> 00:16:47,010
虽然可能有点过度拉伸。

266
00:16:47,016 --> 00:16:49,480
我们可以使用预设来调整它，就像这样。

267
00:16:49,483 --> 00:16:50,960
然后我们只需要添加自动设置。

268
00:16:50,966 --> 00:16:54,980
但是，说实话，50%有点小。

269
00:16:54,983 --> 00:16:57,330
所以我将切换回100%。

270
00:16:57,333 --> 00:16:59,710
让我们检查一下腿。

271
00:16:59,716 --> 00:17:01,790
大腿的尺寸正好，

272
00:17:01,799 --> 00:17:05,200
但小腿的尺寸有点大。

273
00:17:05,200 --> 00:17:09,930
我不太确定富士向日葵的工具是怎么工作的。

274
00:17:10,933 --> 00:17:11,730
但是是的。

275
00:17:11,733 --> 00:17:15,730
然后我们向下滚动，这里会有一个按钮，可以修复裙子。

276
00:17:15,733 --> 00:17:20,580
这会在这个中间添加一个额外的，几个额外的碰撞体。

277
00:17:20,583 --> 00:17:25,030
它在某种程度上起着播放方法的作用。

278
00:17:25,033 --> 00:17:29,560
所以如果我们现在按下播放并尝试向上移动腿，

279
00:17:33,783 --> 00:17:36,910
看起来它飞到了一边。

280
00:17:37,833 --> 00:17:43,207
那是因为它播放方法只关注中间。

281
00:17:43,207 --> 00:17:51,460
这也是我解释为什么播放方法仍然有点缺陷的原因。

282
00:17:51,466 --> 00:17:55,592
因为即使你的起点高于大腿。

283
00:17:55,592 --> 00:18:00,960
链条上的其他所有骨骼也可能飞到一边，无论如何。

284
00:18:00,966 --> 00:18:06,160
所以，这只有在你碰巧坐着的时候，比如说，坐着的时候，我想。

285
00:18:06,166 --> 00:18:09,680
所以，如果我们把这条腿抬起来，它也会跟着抬起来。

286
00:18:09,683 --> 00:18:11,430
然后它会贴着中间。

287
00:18:11,433 --> 00:18:19,080
然而，它也适用于带有像你看到的左右骨头的裙子。

288
00:18:19,083 --> 00:18:21,460
正如你所看到的，其中一个也飞到了一边。

289
00:18:21,466 --> 00:18:24,090
所以，这真的不太好。

290
00:18:24,099 --> 00:18:25,630
哎呀。

291
00:18:25,633 --> 00:18:28,710
这就是为什么我总是鼓励使用弓形方法。

292
00:18:28,716 --> 00:18:31,360
虽然我还没有真正看到有人使用弓形方法。

293
00:18:31,366 --> 00:18:34,680
所以，是的，对于这个特定的插件，你的里程可能会有所不同。

294
00:18:34,683 --> 00:18:40,310
所以，调整了大腿后，我们在左边和右边分别延长一个。

295
00:18:40,316 --> 00:18:44,110
希望我们也能把后背也抬起来。

296
00:18:44,116 --> 00:18:49,860
这将创造一种类似于我刚刚做过的伪碗形方法。

297
00:18:49,866 --> 00:18:53,410
正如你所看到的，弓形方法证明是有效的。

298
00:18:53,416 --> 00:18:57,780
虽然自动生成的自动生成的大腿碰撞器可能是

299
00:18:57,783 --> 00:19:02,710
稍微大了一点，所以它没有被捕捉到正中心。

300
00:19:02,716 --> 00:19:05,210
但它在某种程度上确实有效。

301
00:19:05,216 --> 00:19:10,900
然而，如果你的大腿上部区域有更大的碰撞器，

302
00:19:10,900 --> 00:19:13,830
它也会使裙子的这部分鼓起来。

303
00:19:13,833 --> 00:19:16,900
所以，再次强调，你的里程可能会有所不同。

304
00:19:16,900 --> 00:19:20,730
然而，如果你按下固定弹簧骨骼按钮，

305
00:19:21,166 --> 00:19:27,980
它会将骨骼扩展到几乎可以扩展到的最大程度

306
00:19:27,983 --> 00:19:32,730
直到它们几乎彼此接触，以确保

307
00:19:32,733 --> 00:19:36,200
骨骼的完全覆盖。

308
00:19:36,200 --> 00:19:38,590
然而，我不太推荐它

309
00:19:38,599 --> 00:19:41,760
因为它稍微大了一点。

310
00:19:41,766 --> 00:19:44,760
还有这个，它应该做同样的事情。

311
00:19:44,766 --> 00:19:46,900
现在，我已经清理了我的项目，并导入了

312
00:19:46,900 --> 00:19:51,000
VRM 的 SpringBoneTool 和 VRM 的 SkirtTool 来自 NALULUNA。

313
00:19:51,000 --> 00:19:55,010
现在，对于这个特定的工具，如果你想解决裙子问题，

314
00:19:55,016 --> 00:19:57,980
你必须将这两个工具都导入到这个项目中。

315
00:19:57,983 --> 00:20:01,410
并且你将拥有一个全新的名为 VRM tools 的选项卡。

316
00:20:01,416 --> 00:20:04,930
它将分为三个部分，分别是 SpringBoneTool，

317
00:20:04,933 --> 00:20:07,400
然后是 SkirtTool，然后是清理工具。

318
00:20:07,400 --> 00:20:10,040
那么清理工具到底做了什么？

319
00:20:10,049 --> 00:20:14,730
嗯，它基本上清理了它所做过的所有内容，但遗留下了一些东西，

320
00:20:14,733 --> 00:20:19,730
比如，正如我之前所说，它创建了一个孩子，

321
00:20:19,733 --> 00:20:23,650
它被遗忘了，而且从未被这个东西使用过。

322
00:20:23,650 --> 00:20:26,380
比如，你删除了所有碰撞器，

323
00:20:26,383 --> 00:20:29,090
那么这个工具就是用来清理所有这些东西的。

324
00:20:29,099 --> 00:20:31,150
而我们现在要关注的是，

325
00:20:31,150 --> 00:20:33,160
因为我们从头开始，

326
00:20:33,166 --> 00:20:34,530
我们要从 SpringBoneTool 开始。

327
00:20:34,533 --> 00:20:36,750
从那里开始，

328
00:20:36,750 --> 00:20:40,450
然后让它自动检测项目中的模型。

329
00:20:40,450 --> 00:20:43,360
它会要求你先解包预制件。

330
00:20:43,366 --> 00:20:45,110
所以我们现在就按一下，

331
00:20:45,116 --> 00:20:48,230
然后让它自动检测所有内容。

332
00:20:48,233 --> 00:20:52,910
所以，所有应该有碰撞器的骨骼都会被检测到。

333
00:20:52,916 --> 00:20:55,130
然后在底部的页面上，

334
00:20:55,133 --> 00:20:58,680
将会有加载最佳设置和加载极端设置。

335
00:20:58,683 --> 00:21:01,560
然而，如果我们向上滚动一点，因为我们完全错过了这一点，

336
00:21:01,566 --> 00:21:04,810
你可以看到，将会有参数，在那里你可以设置

337
00:21:04,816 --> 00:21:07,110
所有你需要知道的碰撞器。

338
00:21:07,116 --> 00:21:11,830
比如你的上胸部，你的躯干，因为这是一个二合一的包，

339
00:21:11,833 --> 00:21:16,500
所以你可以处理与你的头部和你的头发相关的碰撞器。

340
00:21:16,500 --> 00:21:19,200
比如，如果你在

341
00:21:19,200 --> 00:21:22,680
头发绕着你的身体走方面有问题，

342
00:21:22,683 --> 00:21:24,810
你也可以处理它们。

343
00:21:24,816 --> 00:21:28,160
所以，我们将非常关注下半身。

344
00:21:28,166 --> 00:21:30,030
所以你可以随意调整参数，

345
00:21:30,033 --> 00:21:32,200
但我现在要保持默认设置。

346
00:21:32,200 --> 00:21:35,952
正如我之前提到的，我几乎是个白痴。

347
00:21:35,952 --> 00:21:38,680
所以，我们要点击加载最佳设置。

348
00:21:38,683 --> 00:21:44,790
它将设置一些适合此模型的默认参数。

349
00:21:44,799 --> 00:21:48,730
然后我们这样创建弹簧骨骼。

350
00:21:48,733 --> 00:21:53,280
所以你会看到，它创建了一套巨大的碰撞器和骨骼。

351
00:21:53,283 --> 00:21:55,080
而且一切都看起来很好。

352
00:21:55,083 --> 00:21:58,580
所以我们可以稍微调整一下，玩一下。

353
00:21:58,583 --> 00:21:59,860
但我们还没有到那里。

354
00:21:59,866 --> 00:22:03,080
但让我们随便玩一下，以便我们可以理解我们正在处理什么。

355
00:22:03,083 --> 00:22:07,310
所以，你可以清楚地看到，碰撞器还没有采用任何形式的方法，

356
00:22:07,316 --> 00:22:09,710
比如碗形方法或平面方法。

357
00:22:09,716 --> 00:22:10,480
什么都没有。

358
00:22:10,483 --> 00:22:11,540
没有这些。

359
00:22:11,549 --> 00:22:16,450
所以这意味着当我们抬起腿时，

360
00:22:17,116 --> 00:22:18,210
它会滑下去。

361
00:22:18,216 --> 00:22:24,730
然而，有了这个插件，你可以看到哪些骨骼正在被交互。

362
00:22:24,733 --> 00:22:29,630
所以你不需要点击到你的模型才能看到它。

363
00:22:29,633 --> 00:22:34,410
你可以在实时中做到这一点，这对这个特殊的插件来说非常棒。

364
00:22:34,416 --> 00:22:38,680
你可以看到它眨眼，这真的很酷。

365
00:22:38,683 --> 00:22:41,010
你也可以在播放模式下，

366
00:22:41,016 --> 00:22:43,280
这个插件窗口会自动切换

367
00:22:43,283 --> 00:22:45,830
到类似于自动摆姿势的东西。

368
00:22:45,833 --> 00:22:51,460
它会自动为你摆姿势，这样你就可以进行一些测试，比如走路。

369
00:22:52,133 --> 00:22:56,660
它会自己走，你可以看到结果。

370
00:22:57,766 --> 00:23:00,030
你也可以让它跑。

371
00:23:00,033 --> 00:23:03,290
你会让它跳一些舞。

372
00:23:03,299 --> 00:23:08,790
你可以看到骨骼在动作，看看它是否真的正常运行。

373
00:23:08,799 --> 00:23:13,260
虽然前两者主要集中在上半身的末端。

374
00:23:13,266 --> 00:23:17,310
如你所见，事后看来效果还不错。

375
00:23:17,316 --> 00:23:20,230
我想我们现在就到此为止吧。

376
00:23:20,233 --> 00:23:23,080
所以，我们就在这里停一下，让我们回到重点。

377
00:23:23,083 --> 00:23:26,310
现在我们已经完成了基础弹簧骨骼，

378
00:23:26,316 --> 00:23:29,380
我们要跳到下一个工具，SkirtTool。

379
00:23:29,383 --> 00:23:32,160
现在我们需要再次让它自动检测这个模型

380
00:23:32,166 --> 00:23:34,930
并自动检测所有裙子根骨骼。

381
00:23:34,933 --> 00:23:36,680
所以如果你像我一样处在这种情况下，

382
00:23:36,683 --> 00:23:40,040
<span style="font-weight:bold">SkirtTool</span>  根本找不到裙子骨骼，

383
00:23:40,049 --> 00:23:44,530
那是因为它期望一组特定的名称，但它什么也没找到，

384
00:23:44,533 --> 00:23:46,610
那么你将不得不自己找到它。

385
00:23:46,616 --> 00:23:50,080
在我的情况下，当我给模型绑定时，我把它放在脊椎上，

386
00:23:50,083 --> 00:23:52,900
因为我认为在骨骼排列方面，

387
00:23:52,900 --> 00:23:55,910
它更适合放在脊椎上而不是臀部。

388
00:23:55,916 --> 00:23:57,410
所以我把它放在那里。

389
00:23:57,416 --> 00:24:00,760
所以这意味着我们必须把它们都带到这里，像这样。

390
00:24:00,766 --> 00:24:03,090
所以我们把它拖进来。

391
00:24:03,099 --> 00:24:04,160
哔。

392
00:24:04,166 --> 00:24:08,160
现在，我们看到了所有裙子骨骼，它们是绿色的点，如你所见。

393
00:24:08,166 --> 00:24:09,630
它现在已经被正确检测到了。

394
00:24:09,633 --> 00:24:10,810
现在让我们向下滚动，

395
00:24:10,816 --> 00:24:13,980
然后将会有三组推荐设置。

396
00:24:13,983 --> 00:24:16,160
这三组推荐设置，

397
00:24:16,166 --> 00:24:20,760
基本上决定了我们应该如何让碰撞器表现。

398
00:24:20,766 --> 00:24:25,530
所以在下载部分将包含文档，

399
00:24:25,533 --> 00:24:27,400
它将是 Google Docs。

400
00:24:27,400 --> 00:24:29,510
但是，它主要用日语，

401
00:24:29,516 --> 00:24:34,180
他们提供的英文文档非常 Google 翻译。

402
00:24:34,183 --> 00:24:38,860
所以我会尽力用我自己的理解来解释它的功能。

403
00:24:38,866 --> 00:24:46,330
所以第一个设置是让它变得巨大，但交互却微不足道。

404
00:24:46,333 --> 00:24:52,180
所以基本上，尽管体积巨大，它表现得有点像轻微的推力。

405
00:24:52,183 --> 00:24:56,880
所以当我们按下播放时，侧面可能会鼓起来一点，但没关系。

406
00:24:56,883 --> 00:25:01,250
那只是我无意中绑定了裙子的方式。

407
00:25:01,250 --> 00:25:06,730
但如果我们把腿抬起来，你可以看到它们在正确地交互。

408
00:25:06,733 --> 00:25:09,330
我会说在某种程度上几乎是正确的。

409
00:25:09,333 --> 00:25:11,750
然后我们可以把腿稍微向外移一点。

410
00:25:11,750 --> 00:25:15,840
它可能会稍微穿透，主要是因为我绑定裙子的方式。

411
00:25:15,849 --> 00:25:20,750
不幸的是，如果我绑定了一个角落的，它也会相应地交互。

412
00:25:20,750 --> 00:25:25,030
所以你绑定裙子越精确，效果就越好。

413
00:25:25,033 --> 00:25:28,010
但是，它正在正确地执行所有操作。

414
00:25:28,016 --> 00:25:32,560
它在上下移动，而不是像我之前做的那样碗形方法一样紧紧贴住。

415
00:25:32,566 --> 00:25:34,810
所以这是一件有趣的事情。

416
00:25:34,816 --> 00:25:42,880
当我们让它走和跑的时候，手可能会遇到一些问题。

417
00:25:42,883 --> 00:25:46,060
主要是因为裙子从这里鼓起来了。

418
00:25:46,066 --> 00:25:51,510
但我相信我以后可以通过调整裙子的一些参数来解决这个问题。

419
00:25:51,516 --> 00:25:55,500
举个例子，如果我们把它放到舞蹈模式，

420
00:25:56,916 --> 00:26:02,930
你可以看到它与腿的交互似乎确实在起作用。

421
00:26:02,933 --> 00:26:04,110
几乎。

422
00:26:04,116 --> 00:26:06,880
我说几乎，我的意思是几乎。

423
00:26:06,883 --> 00:26:08,830
但它确实很令人印象深刻。

424
00:26:08,833 --> 00:26:12,510
它绝对比我自己实现的要好得多。

425
00:26:12,516 --> 00:26:15,610
再说一次，就像我在上一个工具中说的那样，

426
00:26:15,616 --> 00:26:20,210
你的里程可能会有所不同，但我确实认为这个特定的工具要好得多。

427
00:26:20,216 --> 00:26:23,310
好的，让我们退出播放模式，试试第二个设置。

428
00:26:23,316 --> 00:26:28,360
所以如果我们使用第二个设置，现在尝试删除所有碰撞器，

429
00:26:28,366 --> 00:26:31,790
然后我们应用第二个设置，并创建裙子碰撞器，

430
00:26:31,799 --> 00:26:40,110
它将会采用一种奇怪的角度，类似于平面方法，在某种程度上。

431
00:26:40,116 --> 00:26:42,700
一种类似于平面的碗形方法。

432
00:26:42,700 --> 00:26:45,610
正如你从这些线中看到的，它看起来有点像这样。

433
00:26:45,616 --> 00:26:50,310
所以，当我们按下播放键时，这次我的裙子顶部没有鼓起来。

434
00:26:50,316 --> 00:26:53,930
所以这可能是适合我的情况。

435
00:26:53,933 --> 00:26:59,262
当我们抬起腿时，你可以看到它实际上正在正确地散开。

436
00:26:59,262 --> 00:27:04,790
假设我们把腿往两边移动，它可能会有点穿模。

437
00:27:04,799 --> 00:27:09,480
但那是因为这些骨骼意外地与这些骨骼发生了交互。

438
00:27:09,900 --> 00:27:14,340
而且，我也把腿抬到了一个非常极端的、不自然的角度。

439
00:27:14,349 --> 00:27:17,959
但如果我们像自然角度一样做，

440
00:27:17,959 --> 00:27:21,330
如果我们像那样移动，可能会发生类似的事情。

441
00:27:21,333 --> 00:27:24,250
那是因为我又一次用这种方式调整了裙子的绑定。

442
00:27:24,250 --> 00:27:27,710
不过，我们将重置姿势，让它行走和奔跑。

443
00:27:27,716 --> 00:27:30,610
正如你看到的，行走时看起来相当不错。

444
00:27:30,616 --> 00:27:33,360
我们行走时，双手实际上是在推动裙子。

445
00:27:33,366 --> 00:27:36,380
然后，当我们奔跑时，它实际上是正确地交互的。

446
00:27:36,383 --> 00:27:40,910
如你所见，那里有一点小小的穿模，但它并没有那么糟糕。

447
00:27:40,916 --> 00:27:43,500
然后，当我们让它跳舞时，

448
00:27:47,966 --> 00:27:50,560
看起来相当不错。

449
00:27:51,566 --> 00:27:54,750
我们将让它运动得更剧烈一些，以便观察情况如何。

450
00:27:54,750 --> 00:27:59,710
说实话，我会给它最好的评价，

451
00:27:59,716 --> 00:28:02,090
但我真的认为这两个，

452
00:28:02,099 --> 00:28:05,530
这两组捆绑包绝对物超所值。

453
00:28:05,533 --> 00:28:08,180
好的，让我们退出播放模式，尝试第三种方法。

454
00:28:08,183 --> 00:28:12,530
我还没有真正尝试过第三种方法，但我真的很想尝试一下。

455
00:28:12,533 --> 00:28:18,090
好的，所以它就像第二种方法的多行。

456
00:28:18,099 --> 00:28:22,710
好的，让我们看看打开它会是什么样子。

457
00:28:23,400 --> 00:28:27,580
好的，在上面，它似乎鼓起来了一点，但这不算太糟糕。

458
00:28:27,583 --> 00:28:29,160
行走怎么样？

459
00:28:29,166 --> 00:28:32,910
所以，与我们在第一个预设中遇到的情况相同。

460
00:28:32,916 --> 00:28:37,200
所以它有点像是第一种和第二种的混合，第一种具有多行，

461
00:28:37,200 --> 00:28:40,880
然后是第二种，我认为具有更小的碰撞体尺寸。

462
00:28:40,883 --> 00:28:42,900
那么，如果我们让它奔跑呢？

463
00:28:42,900 --> 00:28:44,330
还不错。

464
00:28:44,333 --> 00:28:48,580
好的，让我们回到T形姿势，抬起一条腿。

465
00:28:50,333 --> 00:28:55,200
所以，它鼓起来的主要原因是这里后面的碰撞体。

466
00:28:55,200 --> 00:28:59,480
所以，有三种不同的碰撞体设置，就是因为这个原因。

467
00:28:59,483 --> 00:29:03,730
许多不同的绑定可能会有显著不同的场景。

468
00:29:03,733 --> 00:29:07,710
所以，这三种中，总有一种会适合你的情况。

469
00:29:07,716 --> 00:29:11,710
至于我的情况，它应该是第二种设置。

470
00:29:11,716 --> 00:29:16,760
但，让我们让它跳舞，看看它是否看起来还不错。

471
00:29:16,766 --> 00:29:19,540
我知道，当我们抬起腿时，它已经不那么好了，

472
00:29:19,549 --> 00:29:25,090
但至少，它还是值得我们花点时间看看是什么样子的。

473
00:29:25,099 --> 00:29:27,450
好吧，这实际上还不错，但仍然，

474
00:29:27,450 --> 00:29:30,280
仍然有一些卡顿存在。

475
00:29:30,283 --> 00:29:33,250
但，我们也无能为力。

476
00:29:33,250 --> 00:29:35,290
我们必须使用VRM提供的工具。

477
00:29:35,299 --> 00:29:38,860
就我而言，我必须清除碰撞体，

478
00:29:38,866 --> 00:29:40,630
并改为使用第二种设置。

479
00:29:40,633 --> 00:29:44,280
所以第二种设置更适合我。

480
00:29:44,283 --> 00:29:45,660
就是这样！

481
00:29:45,666 --> 00:29:47,430
裙子问题的解决办法！

482
00:29:47,433 --> 00:29:48,610
希望这能解决你的问题。

483
00:29:48,616 --> 00:29:51,160
如果能解决，请点赞和订阅，

484
00:29:51,166 --> 00:29:54,310
观看更多科技视频、直播精彩片段和游戏视频。

485
00:29:54,316 --> 00:29:55,980
如果你愿意经济上支持我，

486
00:29:55,983 --> 00:29:57,980
请查看我的Throne和Ko-fi，

487
00:29:57,983 --> 00:30:00,880
最好通过Stripe而不是PayPal，这样我才能制作这样的视频。

488
00:30:00,883 --> 00:30:06,630
说到这里，我还想特别感谢我的最大赞助商！

489
00:30:18,383 --> 00:30:20,210
想为你的物品腾出更多空间吗？

490
00:30:20,216 --> 00:30:22,260
那么，SD Maid SE可以帮到你！

491
00:30:22,266 --> 00:30:26,610
SD Maid SE是一款由独立开发者Darken制作的垃圾清理器。

492
00:30:26,616 --> 00:30:30,250
有些应用程序在使用完后，会留下我们不需要的残留文件。

493
00:30:30,250 --> 00:30:32,730
这就是SD Maid SE能帮上忙的地方！

494
00:30:32,733 --> 00:30:35,280
现在，你可以手动执行，但时间就是金钱！

495
00:30:35,283 --> 00:30:38,290
有了SD Maid SE，你可以将很大一部分工作自动化，

496
00:30:38,299 --> 00:30:41,480
将宝贵的时间留给真正重要的事情。

497
00:30:41,483 --> 00:30:43,010
与其他系统垃圾清理器不同，

498
00:30:43,016 --> 00:30:46,980
SD Maid SE不会收集任何形式的个人身份信息，

499
00:30:46,983 --> 00:30:50,260
这些信息不会被出售给那些为了利益而从事低劣数据挖掘活动的机构。

500
00:30:50,266 --> 00:30:53,560
它也不会用大量浪费你时间的广告轰炸你。

501
00:30:53,566 --> 00:30:55,330
就像我说的，时间就是金钱！

502
00:30:55,333 --> 00:30:59,960
SD Maid SE 非常依赖社区的慷慨，才能继续生存和发展。

503
00:30:59,966 --> 00:31:02,130
应用的改进得益于 GitHub 和 Discord 中优秀社区的帮助和贡献。

504
00:31:02,133 --> 00:31:04,830
所以如果你在应用中遇到任何 bug，你并不孤单！

505
00:31:04,833 --> 00:31:08,410
还在等什么？

506
00:31:08,416 --> 00:31:09,260
您还在等什么？

507
00:31:09,266 --> 00:31:14,580
哦，也许我也应该清理一下我的手机屏幕。

508
00:31:14,583 --> 00:31:16,790
最后，感谢 Darken Development 对我内容创作的支持。

509
00:31:16,799 --> 00:31:18,260
下次再见！

510
00:31:18,266 --> 00:31:20,450
下次再见！

511
00:31:20,450 --> 00:31:22,810
下次再见！

